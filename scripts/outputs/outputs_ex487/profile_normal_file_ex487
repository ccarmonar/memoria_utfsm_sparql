
  { 
    time        13% fanout         1 input         1 rows
      clear: (<V set_ctr$40 in>)
    s# 43 41 cluster outer seq start, set no <V set_ctr$40 in>    
    save ctx:()
    time        87% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.3e-06 Fanout:         0
      clear: (<V s_11_2_t0.O$28 an>)
      clear on continue: (<V s_11_2_t0.O$28 an>)
    s# 52 27 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.3e-06 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_11_2_t0.O$28 an>)
     inlined  P =  IRI_ID"...foobar" 
    
    time         0% fanout         0 input         0 rows
      clear: (<V is_named_iri_id$30 i>, <V o$32 a>)$28 () 
    s# 67 62 END Node
    After test:
      0: <V is_named_iri_id$30 i> := Call is_named_iri_id (<V s_11_2_t0.O$28 an>)
      5: if ( 0  = <V is_named_iri_id$30 i>) then 9 else 10 unkn 10
      9: BReturn 1
      10: BReturn 0
    After code:
      0: <V o$32 a> := Call __ro2sq (<r s_11_2_t0.O$28 via  Set67>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $32 (62 ) $40 (62 27 41 ) 
    s# 75 34 Select (<V o$32 a>)
      set no: <r set_ctr$40 via  Set67 Set52>
  }
Warning: You might have a Cartesian product.



 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 30 msec 0 reads         0% read 0 messages         0% clw
