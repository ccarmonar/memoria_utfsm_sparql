
  { 
    time       8.2% fanout         1 input         1 rows
      clear: (<V set_ctr$92 in>)
    s# 95 93 cluster outer seq start, set no <V set_ctr$92 in>    
    save ctx:()
      clear: (<V var3$29 a>, <V var2$28 in>, <V set_no$30 i>, <V var3$84 a>, <V var2$82 a>)
    s# 104 27 Subquery 27 
      multistate set no = <V set_no$30 i>
      { 
        time         5% fanout         1 input         1 rows
        
        s# 154 60 Fork 60 {  
                
            save ctx:()
              set no = <V set_no$30 i> array  <none>  save: 
            time       3.7% fanout         1 input         1 rows
            
            s# 129 37 Fork 37 {  
                    
                save ctx:()
                  set no = <V set_no$30 i> array  <none>  save: 
                time        75% fanout         0 input         1 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
                  clear: (<V s_37_2_t0.S$32 rn>, <V s_37_2_t0.O$33 an>, <V isnotnull$35 in>)
                  clear on continue: (<V s_37_2_t0.S$32 rn>, <V s_37_2_t0.O$33 an>, <V isnotnull$35 in>)
                s# 110 31 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.4e-07 rows Parallel, tail cost       7.9   
                Key RDF_QUAD_POGS  ASC  (<V s_37_2_t0.O$33 an>, <V s_37_2_t0.S$32 rn>)
                 inlined  P =  IRI_ID"...geoGlobe" 
                copy on branch $30 $0 $0 $0 sets: 95 
                
                After code:
                  0: <V isnotnull$35 in> := Call isnotnull (<V s_37_2_t0.S$32 rn>)
                  5: BReturn 0
                time         0% fanout         0 input         0 rows
                $35 () 
                s# 121 38 Sort (HASH) set no <r set_no$30 via  Set110>(<V s_37_2_t0.O$33 an>) -> (<V isnotnull$35 in>) up to   2.4e+07 distinct
                
            }
            time       3.1% fanout         0 input         1 rows
              clear: (<V aggregate$39 in>, <V s_37_2_t0.O$33 an>)
              clear on continue: (<V aggregate$39 in>, <V s_37_2_t0.O$33 an>)
            s# 136 45 group by read node  
            (<V s_37_2_t0.O$33 an>, <V aggregate$39 in>)
            time         0% fanout         0 input         0 rows
            
            s# 146 61 Sort (HASH) set no <r set_no$30 via  Set136>(<V aggregate$39 in>) -> (<V s_37_2_t0.O$33 an>)
            
        }
        time         5% fanout         0 input         1 rows
          clear: (<V s_37_2_t0.O$33 an>, <V aggregate$39 in>, <V var3$29 a>, <V var2$28 in>, <V __ro2sq$73 a>)
          clear on continue: (<V s_37_2_t0.O$33 an>, <V aggregate$39 in>, <V var3$29 a>, <V var2$28 in>, <V __ro2sq$73 a>)
        s# 161 66 Key from temp (<V aggregate$39 in>, <V s_37_2_t0.O$33 an>)
        
        
        After code:
          0: <V __ro2sq$73 a> := Call __ro2sq (<V s_37_2_t0.O$33 an>)
          5: <V var2$28 in> :=  := artm <V aggregate$39 in>
          9: <V var3$29 a> :=  := artm <V __ro2sq$73 a>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 104 75 Subquery Select(<V var2$28 in>, <V var3$29 a>)
          set no: <r set_no$30 via  Set161>
      }
    
    After code:
      0: <V var2$82 a> := Call __ro2sq (<V var2$28 in>)
      5: <V var3$84 a> := Call __ro2sq (<V var3$29 a>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $82 (27 ) $84 (27 ) $92 (27 93 ) 
    s# 179 86 Select (<V var2$82 a>, <V var3$84 a>)
      set no: <r set_ctr$92 via  Set104>
  }


 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 39 msec 0 reads         0% read 0 messages         0% clw
