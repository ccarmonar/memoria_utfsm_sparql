
  { 
    time       8.2% fanout         1 input         1 rows
      clear: (<V set_ctr$90 in>)
    s# 93 91 cluster outer seq start, set no <V set_ctr$90 in>    
    save ctx:()
    Precode:
      0: <V prop/direct/label$27 r> := Call __i2idn (<tag 182 flag 1 c http://www.wikidata.org/prop/direct/label>)
      5: BReturn 0
      clear: (<V var2$31 a>, <V var1Label$30 a>, <V set_no$32 i>, <V prop/direct/label$27 r>, <V var2$82 a>, <V var1Label$80 a>)
    s# 102 29 Subquery 29 
      multistate set no = <V set_no$32 i>
      { 
        time       5.8% fanout         1 input         1 rows
        
        s# 189 58 Fork 58 {  
                
            save ctx:()
              set no = <V set_no$32 i> array  <none>  save: 
            time        78% fanout         0 input         1 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
              clear: (<V s_37_8_t3.S$34 rn>, <V s_37_8_t3.O$35 an>)
              clear on continue: (<V s_37_8_t3.O$35 an>, <V s_37_8_t3.S$34 rn>)$27 (33 ) 
            s# 107 33 from DB.DBA.RDF_QUAD by RDF_QUAD    1.4e-07 rows   
            Key RDF_QUAD  ASC  (<V s_37_8_t3.O$35 an>, <V s_37_8_t3.S$34 rn>)
             inlined  P = <v k_prop/direct/label$111 Set113 rn>
            vector param casts: <V prop/direct/label$27 r>-> <v k_prop/direct/label$111 Set113 rn>
            
            time         0% fanout         0 input         0 rows
              clear: (<V rdf_regex_impl$39 i>, <V __ro2sq$37 a>)
            s# 127 122 END Node
            After test:
              0: <V __ro2sq$37 a> := Call __ro2sq (<V s_37_8_t3.O$35 an>)
              5: <V rdf_regex_impl$39 i> := Call rdf_regex_impl (<V __ro2sq$37 a>, <c .*Z.*>)
              10: if ( 0  = <V rdf_regex_impl$39 i>) then 15 else 14 unkn 15
              14: BReturn 1
              15: BReturn 0
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   0.00063 Fanout:         0
              clear: (<V s_37_8_t0.S$42 rn>)
              clear on continue: (<V s_37_8_t0.S$42 rn>)$34 (122 ) $139 (41 ) 
            s# 135 41 from DB.DBA.RDF_QUAD by RDF_QUAD    0.00063 rows   
            Key RDF_QUAD  ASC  (<V s_37_8_t0.S$42 rn>)
             inlined  P =  IRI_ID"...direct/P69"  ,  S = <v k_s_37_8_t3.S$139 Set141 rn> ,  O =  IRI_ID"...Q51985" 
            vector param casts: <r s_37_8_t3.S$34 via  Set127>-> <v k_s_37_8_t3.S$139 Set141 rn>
            
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
              clear: (<V s_37_8_t2.O$45 an>, <V s_37_8_t2.S$46 rn>)
              clear on continue: (<V s_37_8_t2.O$45 an>, <V s_37_8_t2.S$46 rn>)
            s# 149 44 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
            Key RDF_QUAD  ASC  (<V s_37_8_t2.S$46 rn>, <V s_37_8_t2.O$45 an>)
             inlined  P =  IRI_ID"...direct/P569"  ,  S = <V s_37_8_t0.S$42 rn>
            
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.17 Fanout:         0
            $164 (48 ) $42 (44 ) 
            s# 160 48 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS       0.17 rows   
            Key RDF_QUAD_POGS  ASC  ()
             inlined  P =  IRI_ID"...direct/P21"  ,  O =  IRI_ID"...Q6581072"  ,  S = <v k_s_37_8_t0.S$164 Set166 rn>
            vector param casts: <r s_37_8_t0.S$42 via  Set149>-> <v k_s_37_8_t0.S$164 Set166 rn>
            
            time         0% fanout         0 input         0 rows
            
            s# 173 50 Distinct (HASH) set no <r set_no$32 via  Set160 Set166 Set149 Set135 Set141 Set127 Set107 Set113>(<r s_37_8_t3.O$35 via  Set160 Set166 Set149 Set135 Set141 Set127>, <r s_37_8_t2.O$45 via  Set160 Set166>)
            time         0% fanout         0 input         0 rows
            Precode:
              0: <V __ro2sq$56 a> := Call __ro2sq (<r s_37_8_t2.O$45 via  Set173 Set160 Set166>)
              5: BReturn 0
              clear: (<V __ro2sq$56 a>)$45 (50 48 ) 
            s# 181 59 Sort (HASH) set no <r set_no$32 via  Set173 Set160 Set166 Set149 Set135 Set141 Set127 Set107 Set113>(<V __ro2sq$56 a>) -> (<r s_37_8_t3.O$35 via  Set173 Set160 Set166 Set149 Set135 Set141 Set127>)
            
        }
        time       8.2% fanout         0 input         1 rows
          clear: (<V __ro2sq$56 a>, <V s_37_8_t3.O$35 an>, <V var2$31 a>, <V var1Label$30 a>, <V __ro2sq$71 a>)
          clear on continue: (<V __ro2sq$56 a>, <V s_37_8_t3.O$35 an>, <V var2$31 a>, <V var1Label$30 a>, <V __ro2sq$71 a>)
        s# 196 64 Key from temp (<V s_37_8_t3.O$35 an>, <V __ro2sq$56 a>)
        
        
        After code:
          0: <V __ro2sq$71 a> := Call __ro2sq (<V s_37_8_t3.O$35 an>)
          5: <V var1Label$30 a> :=  := artm <V __ro2sq$71 a>
          9: <V var2$31 a> :=  := artm <V __ro2sq$56 a>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 102 73 Subquery Select(<V var1Label$30 a>, <V var2$31 a>)
          set no: <r set_no$32 via  Set196>
      }
    
    After code:
      0: <V var1Label$80 a> := Call __ro2sq (<V var1Label$30 a>)
      5: <V var2$82 a> := Call __ro2sq (<V var2$31 a>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $80 (29 ) $82 (29 ) $90 (29 91 ) 
    s# 214 84 Select (<V var1Label$80 a>, <V var2$82 a>)
      set no: <r set_ctr$90 via  Set102>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 4% cpu,         4 rnd         0 seq         0% same seg         0% same pg 
Compilation: 4 msec 0 reads         0% read 0 messages         0% clw
