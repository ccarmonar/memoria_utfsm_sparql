  { 
    Precode:
      0:   { 
          time       2.4% fanout         1 input         1 rows
          time       7.8% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  1 ,  1 ,  1 ,  2 )
            5: vector$29 := Call vector (vector$27)
            10: vector$31 := Call vector ()
            15: BReturn 0
          fork {
              time       6.2% fanout         2 input         1 rows
              in iterates in_iter$34  over ( IRI_ID"...Q11068027" ,  IRI_ID"...Q11068027" )
              time        61% fanout         0 input         2 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         2 Fanout:         0
              RDF_QUAD_SP         2 rows(s_37_6_t1.S$39, s_37_6_t1.P$38)
               inlined  S = k_in_iter$99 S <  IRI_ID"...nodeID://b0" 
              time         0% fanout         0 input         0 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
              RDF_QUAD       1.2 rows(s_37_6_t1.O$43)
               inlined  P = k_s_37_6_t1.P$114 ,  S = k_s_37_6_t1.S$118 S = k_in_iter$120
              time         0% fanout         0 input         0 rows
              END Node
              After test:
              0: one_of_these$46 := Call one_of_these (s_37_6_t1.S$39,  IRI_ID"...Q11068027" ,  IRI_ID"...Q11068027" )
              5: if ( 0  < one_of_these$46) then 9 else 10 unkn 10
              9: BReturn 1
              10: BReturn 0
              
              After code:
              0: __ro2lo$48 := Call __ro2lo (s_37_6_t1.O$43)
              5: vector$50 := Call vector (s_37_6_t1.S$39, s_37_6_t1.P$38, __ro2lo$48)
              10: if (user_aggr_notfirst$55  =  1 ) then 25 else 14 unkn 14
              14: user_aggr_notfirst$55  :=  := artm  1 
              18: user_aggr_ret$57 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$56 )
              25: user_aggr_ret$57 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$56 , vector$29, vector$50, vector$31,  1 )
              32: BReturn 0
            }
          time        21% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$52
          
          After code:
          0: callret-0$58 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$56 )
          7: BReturn 0
          time       1.2% fanout         0 input         1 rows
          Subquery Select(callret-0$58)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$166 )
      15: BReturn 0
    END Node
  }


 1 msec 8% cpu,         2 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
