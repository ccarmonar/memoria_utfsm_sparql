http://learningsparql.com/ns/data#joan	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Aunt	
http://learningsparql.com/ns/data#mike	http://learningsparql.com/ns/addressbook#hasAunt	http://learningsparql.com/ns/data#gene	
http://learningsparql.com/ns/data#gene	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Aunt	
http://learningsparql.com/ns/data#jane	http://learningsparql.com/ns/addressbook#hasAunt	http://learningsparql.com/ns/data#joan	

  { 
    Precode:
      0:   { 
          time      0.93% fanout         1 input         1 rows
          time       3.7% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  1 ,  3 ,  IRI_ID"...type" ,  3 ,  IRI_ID"...Aunt" )
            5: vector$29 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...hasAunt" ,  1 ,  1 )
            10: vector$31 := Call vector (vector$27, vector$29)
            15: vector$33 := Call vector ()
            20: BReturn 0
          fork {
              time        19% fanout         2 input         1 rows
              RDF_QUAD_POGS         2 rows(s_21_13_t5.S$36)
               P =  IRI_ID"...gender"  ,  O =  IRI_ID"...female" 
              time        12% fanout         1 input         2 rows
              RDF_QUAD         1 rows(s_21_13_t4.O$40, s_21_13_t4.S$39)
               inlined  P =  IRI_ID"...hasParent"  ,  S = s_21_13_t5.S$36
              time       7.7% fanout         2 input         2 rows
              RDF_QUAD_POGS       1.3 rows(s_21_13_t3.S$43)
               P =  IRI_ID"...hasParent"  ,  O = cast$106
              time       7.8% fanout         1 input         4 rows
              RDF_QUAD_POGS       1.3 rows(s_21_13_t2.O$47, s_21_13_t2.S$46)
               P =  IRI_ID"...hasParent"  ,  O = cast$120
              time        45% fanout         0 input         4 rows
              END Node
              After test:
              0: if (s_21_13_t2.O$47 = s_21_13_t4.S$39) then 5 else 4 unkn 5
              4: BReturn 1
              5: BReturn 0
              
              After code:
              0: vector$49 := Call vector (s_21_13_t2.S$46, s_21_13_t4.S$39)
              5: if (user_aggr_notfirst$54  =  1 ) then 20 else 9 unkn 9
              9: user_aggr_notfirst$54  :=  := artm  1 
              13: user_aggr_ret$56 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$55 )
              20: user_aggr_ret$56 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$55 , vector$31, vector$49, vector$33,  1 )
              27: BReturn 0
            }
          time       3.1% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$51
          
          After code:
          0: callret-0$57 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$55 )
          7: BReturn 0
          time      0.49% fanout         0 input         1 rows
          Subquery Select(callret-0$57)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$169 )
      15: BReturn 0
    END Node
  }


 1 msec 15% cpu,         9 rnd         3 seq        50% same seg         0% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
