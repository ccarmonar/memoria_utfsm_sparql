
  { 
    time    0.0097% fanout         1 input         1 rows
      clear: (<V set_ctr$84 in>)
    s# 87 85 cluster outer seq start, set no <V set_ctr$84 in>    
    save ctx:()
      clear: (<V var2$29 a>, <V var1$28 a>, <V set_no$30 i>, <V var2$76 a>, <V var1$74 a>)
    s# 96 27 Subquery 27 
      multistate set no = <V set_no$30 i>
      { 
        time    0.0071% fanout         1 input         1 rows
        
        s# 147 46 Fork 46 {  
                
            save ctx:()
              set no = <V set_no$30 i> array  <none>  save: 
            time      0.26% fanout       318 input         1 rows
              clear: (<V s_37_4_t1.S$32 rn>, <V s_37_4_t1.O$33 an>)
              clear on continue: (<V s_37_4_t1.S$32 rn>, <V s_37_4_t1.O$33 an>)
            s# 101 31 from DB.DBA.RDF_QUAD by RDF_QUAD    2.2e+02 rows Parallel, tail cost   6.9e+03   
            Key RDF_QUAD  ASC  (<V s_37_4_t1.O$33 an>, <V s_37_4_t1.S$32 rn>)
             inlined  P =  IRI_ID"...direct/P597" 
            copy on branch $30 $0 $0 $0 sets: 87 
            
            time     1e+02% fanout         0 input       318 rows
              clear: (<V rdf_strlen_impl$37 i>, <V __ro2sq$35 a>)
            s# 117 112 END Node
            After test:
              0: <V __ro2sq$35 a> := Call __ro2sq (<V s_37_4_t1.O$33 an>)
              5: <V rdf_strlen_impl$37 i> := Call rdf_strlen_impl (<V __ro2sq$35 a>)
              10: if ( 10  > <V rdf_strlen_impl$37 i>) then 14 else 15 unkn 15
              14: BReturn 1
              15: BReturn 0
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.17 Fanout:         0
            Precode:
              0: <V __ro2sq$39 a> := Call __ro2sq (<r s_37_4_t1.O$33 via  Set117>)
              5: BReturn 0
              clear: (<V s_37_4_t0.S$42 rn>, <V __ro2sq$39 a>, <V rdf_strlen_impl$44 i>)
              clear on continue: (<V rdf_strlen_impl$44 i>, <V s_37_4_t0.S$42 rn>)$32 (112 ) $33 (112 ) $129 (41 ) 
            s# 125 41 from DB.DBA.RDF_QUAD by RDF_QUAD       0.17 rows Parallel, tail cost         1   
            Key RDF_QUAD  ASC  (<V s_37_4_t0.S$42 rn>)
             inlined  P =  IRI_ID"...direct/P21"  ,  S = <v k_s_37_4_t1.S$129 Set131 rn> ,  O =  IRI_ID"...Q6581072" 
            vector param casts: <r s_37_4_t1.S$32 via  Set117>-> <v k_s_37_4_t1.S$129 Set131 rn>
            copy on branch $129 $39 $30 $0 sets: 87 101 117 
            
            After code:
              0: <V rdf_strlen_impl$44 i> := Call rdf_strlen_impl (<r __ro2sq$39 via  Set125 Set131>)
              5: BReturn 0
            time         0% fanout         0 input         0 rows
            $44 () 
            s# 139 47 Sort (HASH) set no <r set_no$30 via  Set125 Set131 Set117 Set101>(<V rdf_strlen_impl$44 i>) -> (<V s_37_4_t0.S$42 rn>, <r __ro2sq$39 via  Set125 Set131>)
            
        }
        time      0.17% fanout         0 input         1 rows
          clear: (<V __ro2sq$39 a>, <V s_37_4_t0.S$42 rn>, <V var2$29 a>, <V var1$28 a>, <V __id2in$65 a>)
          clear on continue: (<V __ro2sq$39 a>, <V s_37_4_t0.S$42 rn>, <V var2$29 a>, <V var1$28 a>, <V __id2in$65 a>)
        s# 154 52 Key from temp (<V s_37_4_t0.S$42 rn>, <V __ro2sq$39 a>)
        
        
        After code:
          0: <V __id2in$65 a> := Call __id2in (<V s_37_4_t0.S$42 rn>)
          5: <V var1$28 a> :=  := artm <V __id2in$65 a>
          9: <V var2$29 a> :=  := artm <V __ro2sq$39 a>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 96 67 Subquery Select(<V var1$28 a>, <V var2$29 a>)
          set no: <r set_no$30 via  Set154>
      }
    
    After code:
      0: <V var1$74 a> := Call __ro2sq (<V var1$28 a>)
      5: <V var2$76 a> := Call __ro2sq (<V var2$29 a>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $74 (27 ) $76 (27 ) $84 (27 85 ) 
    s# 172 78 Select (<V var1$74 a>, <V var2$76 a>)
      set no: <r set_ctr$84 via  Set96>
  }
Warning: You might have a Cartesian product.



 41 msec 94% cpu,       319 rnd       317 seq         0% same seg      12.5% same pg 
2 disk reads, 0 read ahead,   88.4746% wait
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
