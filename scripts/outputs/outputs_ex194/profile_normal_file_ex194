http://learningsparql.com/ns/data#i0432	http://www.w3.org/2006/vcard/ns#family-name	Mutt	
http://learningsparql.com/ns/data#i9771	http://www.w3.org/2006/vcard/ns#given-name	Cindy	
http://learningsparql.com/ns/data#i5433	http://www.w3.org/2006/vcard/ns#family-name	Duncan	
http://learningsparql.com/ns/data#i5433	http://www.w3.org/2006/vcard/ns#email	katherine.duncan@elpaso.com	
http://learningsparql.com/ns/data#i9771	http://www.w3.org/2006/vcard/ns#homeTel	(245) 646-5488	
http://learningsparql.com/ns/data#i9771	http://www.w3.org/2006/vcard/ns#email	cindym@gmail.com	
http://learningsparql.com/ns/addressbook#i0432	http://www.w3.org/2006/vcard/ns#given-name	Richard	
http://learningsparql.com/ns/data#i0432	http://www.w3.org/2006/vcard/ns#email	richard49@hotmail.com	
http://learningsparql.com/ns/addressbook#i0432	http://www.w3.org/2006/vcard/ns#homeTel	(229) 276-5135	
http://learningsparql.com/ns/data#i0432	http://www.w3.org/2006/vcard/ns#homeTel	(229) 276-5135	
http://learningsparql.com/ns/data#i2194	http://www.w3.org/2006/vcard/ns#given-name	Bradley	
http://learningsparql.com/ns/data#i8301	http://www.w3.org/2006/vcard/ns#family-name	Ellis	
http://learningsparql.com/ns/data#i0432	http://www.w3.org/2006/vcard/ns#given-name	Richard	
http://learningsparql.com/ns/addressbook#i0432	http://www.w3.org/2006/vcard/ns#family-name	Mutt	
http://learningsparql.com/ns/data#i2194	http://www.w3.org/2006/vcard/ns#family-name	Perry	
http://learningsparql.com/ns/data#i5433	http://www.w3.org/2006/vcard/ns#given-name	Katherine	
http://learningsparql.com/ns/data#i2194	http://www.w3.org/2006/vcard/ns#email	bradley.perry@corning.com	
http://learningsparql.com/ns/data#i8301	http://www.w3.org/2006/vcard/ns#email	c.ellis@usairwaysgroup.com	
http://learningsparql.com/ns/addressbook#i0432	http://www.w3.org/2006/vcard/ns#email	richard49@hotmail.com	
http://learningsparql.com/ns/data#i8301	http://www.w3.org/2006/vcard/ns#email	craigellis@yahoo.com	

  { 
    Precode:
      0:   { 
          time      0.32% fanout         1 input         1 rows
            clear: (<V ext_sets$92 i>, <V set_ctr$58 in>)
          s# 93 59 cluster outer seq start, set no <V set_ctr$58 in>    
          save ctx:()
          time       1.5% fanout         1 input         1 rows
          Precode:
            0: vector$27  := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...given-name" ,  1 ,  4 )
            5: vector$29  := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...family-name" ,  1 ,  3 )
            10: vector$31  := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...email" ,  1 ,  2 )
            15: vector$33  := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...homeTel" ,  1 ,  1 )
            20: vector$35  := Call vector (vector$27 , vector$29 , vector$31 , vector$33 )
            25: vector$37  := Call vector ()
            30: BReturn 0
          
          s# 174 76 Fork 76 {  
              time       6.5% fanout         8 input         1 rows
                clear: (<V t2.O$40 an>, <V t2.S$41 rn>)
                clear on continue: (<V t2.O$40 an>, <V t2.S$41 rn>)
              s# 104 39 from DB.DBA.RDF_QUAD by RDF_QUAD          8 rows   
              Key RDF_QUAD  ASC  (<V t2.S$41 rn>, <V t2.O$40 an>)
               inlined  P =  IRI_ID"...lastName" 
              
              time       3.6% fanout         1 input         8 rows
                clear: (<V t1.O$44 an>, <V t1.S$45 rn>)
                clear on continue: (<V t1.O$44 an>, <V t1.S$45 rn>)
              s# 115 43 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
              Key RDF_QUAD  ASC  (<V t1.S$45 rn>, <V t1.O$44 an>)
               inlined  P =  IRI_ID"...firstName"  ,  S = <V t2.S$41 rn>
              
              time        20% fanout     0.875 input         8 rows
              Precode:
                0: <V __ro2lo$47 a> := Call __ro2lo (<r t2.O$40 via  Set115>)
                5: <V __ro2lo$49 a> := Call __ro2lo (<V t1.O$44 an>)
                10: BReturn 0
                clear: (<V t3.O$52 an>, <V t3.S$53 rn>, <V __ro2lo$49 a>, <V __ro2lo$47 a>)
                clear on continue: (<V t3.S$53 rn>, <V t3.O$52 an>)$130 (51 ) $40 (43 ) $41 (43 ) $44 () 
              s# 126 51 from DB.DBA.RDF_QUAD by RDF_QUAD        1.2 rows   
              Key RDF_QUAD  ASC  (<V t3.S$53 rn>, <V t3.O$52 an>)
               inlined  P =  IRI_ID"...email"  ,  S = <v k_t2.S$130 Set132 rn>
              vector param casts: <r t2.S$41 via  Set115>-> <v k_t2.S$130 Set132 rn>
              
              time        28% fanout         1 input         7 rows
                clear: (<V set_ctr$61 i>)
              s# 141 65 cluster outer seq start, set no <V set_ctr$61 i>    
              save ctx:()
              time       2.9% fanout  0.428571 input         7 rows
                clear: (<V t5.O$56 a>)
                clear on continue: (<V t5.O$56 a>)$154 (55 ) 
              s# 150 55 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
              Key RDF_QUAD  ASC  (<V t5.O$56 a>)
               inlined  P =  IRI_ID"...homeTel"  ,  S = <v k_t3.S$154 Set156 rn>
              vector param casts: <r t3.S$53 via  Set141>-> <v k_t3.S$154 Set156 rn>
              
              time        36% fanout         0 input         3 rows
                clear: (<V user_aggr_ret$79 x>, <V vector$74 x>, <V __ro2lo$72 a>, <V __ro2lo$70 a>)$47 (55 65 51 ) $49 (55 65 51 ) $52 (55 65 ) $53 (55 65 ) $56 () $61 (55 65 ) 
              s# 164 60 end of outer seq <r set_ctr$61 via  Set150 Set156>
               out: (<V t5.O$56 a>)
               shadow: ( <none> )
              After code:
                0: <V __ro2lo$70 a> := Call __ro2lo (<r t3.O$52 via  Set164>)
                5: <V __ro2lo$72 a> := Call __ro2lo (<V t5.O$56 a>)
                10: <V vector$74 x> := Call vector (<r t3.S$53 via  Set164>, <V __ro2lo$72 a>, <V __ro2lo$70 a>, <r __ro2lo$47 via  Set164 Set126 Set132>, <r __ro2lo$49 via  Set164 Set126 Set132>)
                15: if (user_aggr_notfirst$77  =  1 ) then 30 else 19 unkn 19
                19: user_aggr_notfirst$77  :=  := artm  1 
                23: <V user_aggr_ret$79 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$78 )
                30: <V user_aggr_ret$79 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$78 , vector$35 , <V vector$74 x>, vector$37 ,  1 )
                37: BReturn 0
          }
          time       1.2% fanout         1 input         1 rows
            clear: (<V callret-0$80 x>)
          s# 181 90 skip node  1  <none> <V set_ctr$58 in>
          After code:
            0: <V callret-0$80 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$78 )
            7: BReturn 0
          time      0.15% fanout         0 input         1 rows
          $80 (90 ) $58 (90 76 59 ) $92 (90 76 59 ) 
          s# 189 82 Subquery Select(<V callret-0$80 x>)
            set no: <r set_ctr$58 via  Set181>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$197 )
      15: BReturn 0
    
    END Node
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 27% cpu,        50 rnd         8 seq   39.2157% same seg   31.3725% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
