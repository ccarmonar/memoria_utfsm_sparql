http://learningsparql.com/ns/addressbook#i0432	http://xmlns.com/foaf/0.1/familyName	Mutt	
http://learningsparql.com/ns/data#i2194	http://xmlns.com/foaf/0.1/givenName	Bradley	
http://learningsparql.com/ns/data#i0432	http://xmlns.com/foaf/0.1/familyName	Mutt	
http://learningsparql.com/ns/data#i9771	http://xmlns.com/foaf/0.1/familyName	Marshall	
http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/givenName	Craig	
http://learningsparql.com/ns/data#i0432	http://xmlns.com/foaf/0.1/mbox_sha1sum	b7f191315aa6bb4a9ab56b02e334647c4b1104a0	
http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/mbox_sha1sum	faec1b07cf7c10e302544f22958c02c53844a4fa	
http://learningsparql.com/ns/data#i2194	http://xmlns.com/foaf/0.1/familyName	Perry	
http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/familyName	Ellis	
http://learningsparql.com/ns/data#i9771	http://xmlns.com/foaf/0.1/givenName	Cindy	
http://learningsparql.com/ns/data#i2194	http://xmlns.com/foaf/0.1/mbox_sha1sum	868f415ef3eff97dc7cc0deefdf292146f72cbb8	
http://learningsparql.com/ns/addressbook#i0432	http://xmlns.com/foaf/0.1/givenName	Richard	
http://learningsparql.com/ns/data#i5433	http://xmlns.com/foaf/0.1/familyName	Duncan	
http://learningsparql.com/ns/addressbook#i0432	http://xmlns.com/foaf/0.1/mbox_sha1sum	b7f191315aa6bb4a9ab56b02e334647c4b1104a0	
http://learningsparql.com/ns/data#i9771	http://xmlns.com/foaf/0.1/mbox_sha1sum	821be6ab56326d7b08246f2cb9c0f68afe0156d9	
http://learningsparql.com/ns/data#i5433	http://xmlns.com/foaf/0.1/mbox_sha1sum	9275cda04adf31f4aad2f69d945c7cf5fb00ef4c	
http://learningsparql.com/ns/data#i0432	http://xmlns.com/foaf/0.1/givenName	Richard	
http://learningsparql.com/ns/data#i5433	http://xmlns.com/foaf/0.1/givenName	Katherine	
http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/mbox_sha1sum	396d3e3aef87e0fecd3cbbdd2479eb3797d7af18	

  { 
    Precode:
      0:   { 
          time      0.47% fanout         1 input         1 rows
          time       1.5% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...givenName" ,  1 ,  3 )
            5: vector$29 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...familyName" ,  1 ,  2 )
            10: vector$31 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...mbox_sha1sum" ,  1 ,  1 )
            15: vector$33 := Call vector (vector$27, vector$29, vector$31)
            20: vector$35 := Call vector ()
            25: BReturn 0
          fork {
              time       8.3% fanout         8 input         1 rows
              RDF_QUAD         8 rows(t3.S$39, t3.O$38)
               inlined  P =  IRI_ID"...lastName" 
              time       3.8% fanout         1 input         8 rows
              RDF_QUAD         1 rows(t2.S$43, t2.O$42)
               inlined  P =  IRI_ID"...firstName"  ,  S = t3.S$39
              time        85% fanout         0 input         8 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
              Precode:
                0: __ro2lo$45 := Call __ro2lo (t3.O$38)
                5: __ro2lo$47 := Call __ro2lo (t2.O$42)
                10: BReturn 0
              RDF_QUAD       1.2 rows(t4.O$50)
               inlined  P =  IRI_ID"...email"  ,  S = t2.S$43
              
              After code:
              0: __ro2sq$52 := Call __ro2sq (t4.O$50)
              5: rdf_sha1_impl$54 := Call rdf_sha1_impl (__ro2sq$52)
              10: DB.DBA.RDF_LONG_OF_SQLVAL$56 := Call DB.DBA.RDF_LONG_OF_SQLVAL (rdf_sha1_impl$54)
              17: vector$58 := Call vector (t2.S$43, DB.DBA.RDF_LONG_OF_SQLVAL$56, __ro2lo$45, __ro2lo$47)
              22: if (user_aggr_notfirst$63  =  1 ) then 37 else 26 unkn 26
              26: user_aggr_notfirst$63  :=  := artm  1 
              30: user_aggr_ret$65 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$64 )
              37: user_aggr_ret$65 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$64 , vector$33, vector$58, vector$35,  1 )
              44: BReturn 0
            }
          time       1.1% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$60
          
          After code:
          0: callret-0$66 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$64 )
          7: BReturn 0
          time      0.17% fanout         0 input         1 rows
          Subquery Select(callret-0$66)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$147 )
      15: BReturn 0
    END Node
  }


 0 msec 25% cpu,        40 rnd         8 seq   34.1463% same seg   36.5854% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
