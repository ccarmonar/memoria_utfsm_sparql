
  { 
    time        35% fanout         1 input         1 rows
    time        65% fanout         0 input         1 rows
    END Node
    After test:
    0: rdf_regex_impl$28 := Call rdf_regex_impl (<DB_NULL>, <c [A-Z]*y>)
    5: if ( 0  = rdf_regex_impl$28) then 10 else 9 unkn 10
    9: BReturn 1
    10: BReturn 0
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   3.1e+04 Fanout:         0
    Precode:
      0: rdf_regex_impl$30 := Call rdf_regex_impl (<DB_NULL>, <c [A-Z]*y>)
      5: BReturn 0
    RDF_QUAD_POGS   3.1e+04 rows(s_37_4_t0.S$33)
     P =  IRI_ID"...direct/P31"  ,  O =  IRI_ID"...Q532" 
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:     0.051 Fanout:         0
    RDF_QUAD     0.051 rows()
     inlined  P =  IRI_ID"...direct/P17"  ,  S = s_37_4_t0.S$33 ,  O =  IRI_ID"...Q145" 
    
    After code:
    0: var1$37 := Call __id2in (s_37_4_t0.S$33)
    5: BReturn 0
    time         0% fanout         0 input         0 rows
    Select (var1$37, <DB_NULL>)
  }


 0 msec 1% cpu,         0 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
