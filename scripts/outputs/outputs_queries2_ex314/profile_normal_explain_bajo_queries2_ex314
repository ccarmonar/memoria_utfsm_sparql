http://learningsparql.com/ns/addressbook#i8301	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/data#i0432	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/data#i2194	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/data#i9771	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/addressbook#i9771	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/data#i8301	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/data#i5433	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	
http://learningsparql.com/ns/addressbook#i0432	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://learningsparql.com/ns/addressbook#Person	

  { 
    Precode:
      0:   { 
          time       0.9% fanout         1 input         1 rows
          time       3.1% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...type" ,  3 ,  IRI_ID"...Person" )
            5: vector$29 := Call vector (vector$27)
            10: vector$31 := Call vector ()
            15: BReturn 0
          fork {
              time        19% fanout         8 input         1 rows
              RDF_QUAD         8 rows(s_11_7_t1.S$34)
               inlined  P =  IRI_ID"...firstName" 
              time        74% fanout         0 input         8 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
              RDF_QUAD         1 rows()
               inlined  P =  IRI_ID"...lastName"  ,  S = s_11_7_t1.S$34
              
              After code:
              0: vector$38 := Call vector (s_11_7_t1.S$34)
              5: if (user_aggr_notfirst$43  =  1 ) then 20 else 9 unkn 9
              9: user_aggr_notfirst$43  :=  := artm  1 
              13: user_aggr_ret$45 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$44 )
              20: user_aggr_ret$45 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$44 , vector$29, vector$38, vector$31,  1 )
              27: BReturn 0
            }
          time       2.6% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$40
          
          After code:
          0: callret-0$46 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$44 )
          7: BReturn 0
          time      0.37% fanout         0 input         1 rows
          Subquery Select(callret-0$46)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$114 )
      15: BReturn 0
    END Node
  }


 1 msec 26% cpu,         9 rnd         7 seq        70% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
