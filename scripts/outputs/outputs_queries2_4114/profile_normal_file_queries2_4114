
  { 
    time       5.3% fanout         1 input         1 rows
      clear: (<V set_ctr$50 in>)
    s# 53 51 cluster outer seq start, set no <V set_ctr$50 in>    
    save ctx:()
    time        95% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.14 Fanout:         0
    Precode:
      0: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c stars>)
      7: BReturn 0
      clear: (<V s_37_2_t0.O$30 an>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a>)
      clear on continue: (<V s_37_2_t0.O$30 an>)
    s# 62 29 from DB.DBA.RDF_QUAD by RDF_QUAD       0.14 rows   
    Key RDF_QUAD  ASC  (<V s_37_2_t0.O$30 an>)
     inlined  P =  IRI_ID"...description"  ,  S =  IRI_ID"...Q1" 
    
    time         0% fanout         0 input         0 rows
      clear: (<V DB.DBA.RDF_LANGUAGE_OF_OBJ$40 a>, <V __ro2sq$38 a>, <V rdf_contains_impl$36 i>, <V rdf_lcase_impl$34 s>, <V __ro2lo$32 a>, <V var1$42 a>)$27 (29 ) $30 () 
    s# 77 72 END Node
    After test:
      0: <V __ro2lo$32 a> := Call __ro2lo (<V s_37_2_t0.O$30 an>)
      5: <V rdf_lcase_impl$34 s> := Call rdf_lcase_impl (<V __ro2lo$32 a>)
      10: <V rdf_contains_impl$36 i> := Call rdf_contains_impl (<V rdf_lcase_impl$34 s>, <r DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 via  Set62>)
      15: if ( 0  = <V rdf_contains_impl$36 i>) then 36 else 19 unkn 36
      19: <V __ro2sq$38 a> := Call __ro2sq (<V s_37_2_t0.O$30 an>)
      24: <V DB.DBA.RDF_LANGUAGE_OF_OBJ$40 a> := Call DB.DBA.RDF_LANGUAGE_OF_OBJ (<V __ro2sq$38 a>)
      31: if (<c en> = <V DB.DBA.RDF_LANGUAGE_OF_OBJ$40 a>) then 35 else 36 unkn 36
      35: BReturn 1
      36: BReturn 0
    After code:
      0: <V var1$42 a> := Call __ro2sq (<r s_37_2_t0.O$30 via  Set77>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $42 (72 ) $50 (72 29 51 ) 
    s# 86 44 Select (<V var1$42 a>)
      set no: <r set_ctr$50 via  Set77 Set62>
  }
Warning: You might have a Cartesian product.



 0 msec 4% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
