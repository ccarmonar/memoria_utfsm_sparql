
  { 
    time       7.9% fanout         1 input         1 rows
    Precode:
      0: vector$27 := Call vector ( IRI_ID"...Q18975796" )
      5: vector$29 := Call vector ( IRI_ID"...Q123" )
      10: vector$31 := Call vector (vector$27, vector$29, vector$27)
      15: BReturn 0
    Subquery 33 
      { 
        time       5.3% fanout         1 input         1 rows
        fork {
            time        82% fanout         0 input         1 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.1e-07 Fanout:         0
            RDF_QUAD_POGS   1.1e-07 rows(s_37_7_t1.S$38)
             inlined  P =  IRI_ID"...rank" 
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       2.8 Fanout:         0
            RDF_QUAD_OP       2.8 rows(s_37_7_t0.O$42, s_37_7_t0.P$41)
             inlined  O = cast$146
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.57 Fanout:         0
            RDF_QUAD_POGS      0.57 rows(s_37_7_t0.S$46)
             P = s_37_7_t0.P$41 ,  O = k_s_37_7_t1.S$161 ,  S <  IRI_ID"...nodeID://b0"  S <  IRI_ID"...nodeID://b0" 
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       9.2 Fanout:         0
            Precode:
              0: __id2in$49 := Call __id2in (s_37_7_t0.S$46)
              5: BReturn 0
            RDF_QUAD_SP       9.2 rows(s_37_7_t2.P$52)
             inlined  S = k_s_37_7_t0.O$175 S = k_s_37_7_t1.S$179
            time         0% fanout         0 input         0 rows
            END Node
            After test:
            0: __id2in$55 := Call __id2in (s_37_7_t2.P$52)
            5: __bft$57 := Call __bft (__id2in$55,  2 )
            10: _cvt$59 := Call _cvt (<tag 193 flag 0>, __bft$57)
            15: if (_cvt$59  LIKE  <c %string1%>) then 19 else 20 unkn 20
            19: BReturn 1
            20: BReturn 0
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
            RDF_QUAD       1.2 rows()
             inlined  P = k_s_37_7_t2.P$204 ,  S = k_s_37_7_t0.O$208 S = k_s_37_7_t1.S$210
            time         0% fanout         0 input         0 rows
            Precode:
              0: dta$69 :=  := artm vector$31
              4: proc_ctr$65 :=  := artm  0 
              8:  <none>  := Call __reset_temp ( 139973149748288 )
              13:  <proc table>  := Call DB.DBA.SPARQL_BINDINGS_VIEW_C_1_IMP (vector$31)
              20: BReturn 0
            Key from temp (proc_ctr$65, BND0$67)
            
             Local Test
            0: if (s_37_7_t0.S$46 = BND0$67) then 4 else 5 unkn 5
            4: BReturn 1
            5: BReturn 0
            time         0% fanout         0 input         0 rows
            Sort (s_37_7_t0.S$46) -> (inc$80, __id2in$49)
            
          }
        time       4.7% fanout         0 input         1 rows
        group by read node  
        (s_37_7_t0.S$46, aggregate$78, __id2in$49)
        
        After code:
        0: var1$34 :=  := artm __id2in$49
        4: var2$35 :=  := artm aggregate$78
        8: BReturn 0
        time         0% fanout         0 input         0 rows
        Subquery Select(var1$34, var2$35)
      }
    
    After code:
    0: var1$104 := Call __ro2sq (var1$34)
    5: var2$106 := Call __ro2sq (var2$35)
    10: BReturn 0
    time         0% fanout         0 input         0 rows
    Select (var1$104, var2$106)
  }


 0 msec 1% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
