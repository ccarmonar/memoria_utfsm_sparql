http://www.w3.org/2002/07/owl#equivalentClass	equivalentClass	
http://www.w3.org/2002/07/owl#equivalentClass	equivalentClass	
http://www.w3.org/2002/07/owl#equivalentProperty	equivalentProperty	
http://www.w3.org/2002/07/owl#equivalentProperty	equivalentProperty	
http://www.w3.org/2002/07/owl#InverseFunctionalProperty	InverseFunctionalProperty	
http://www.w3.org/2002/07/owl#InverseFunctionalProperty	InverseFunctionalProperty	
http://www.w3.org/2002/07/owl#SymmetricProperty	SymmetricProperty	
http://www.w3.org/2002/07/owl#SymmetricProperty	SymmetricProperty	
http://www.w3.org/2002/07/owl#FunctionalProperty	FunctionalProperty	
http://www.w3.org/2002/07/owl#FunctionalProperty	FunctionalProperty	
http://www.w3.org/2002/07/owl#inverseOf	inverseOf	
http://www.w3.org/2002/07/owl#inverseOf	inverseOf	
http://www.w3.org/2002/07/owl#TransitiveProperty	TransitiveProperty	
http://www.w3.org/2002/07/owl#TransitiveProperty	TransitiveProperty	
http://www.w3.org/2002/07/owl#Thing	Thing	
http://www.w3.org/2002/07/owl#Thing	Thing	
http://www.w3.org/2002/07/owl#Class	Class	
http://www.w3.org/2002/07/owl#Class	Class	
http://www.w3.org/2002/07/owl#Nothing	Nothing	
http://www.w3.org/2002/07/owl#Nothing	Nothing	

  { 
    time      0.93% fanout         1 input         1 rows
      clear: (<V set_ctr$41 in>)
    s# 47 42 cluster outer seq start, set no <V set_ctr$41 in>    
    save ctx:()
    time        35% fanout      1000 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   3.1e+07 Fanout:     1e+03
      clear: (<V s_8_2_t0.O$28 an>, <V s_8_2_t0.S$29 rn>)
      clear on continue: (<V s_8_2_t0.O$28 an>, <V s_8_2_t0.S$29 rn>)
    s# 56 27 from DB.DBA.RDF_QUAD by RDF_QUAD    3.1e+07 rows   
    Key RDF_QUAD  ASC  (<V s_8_2_t0.S$29 rn>, <V s_8_2_t0.O$28 an>)
     inlined  P =  IRI_ID"...label" 
    
    time        64% fanout      0.02 input      1000 rows
      clear: (<V label$33 a>, <V s$31 a>)$28 () $29 () 
    s# 67 45 skip node  20  <none> <r set_ctr$41 via  Set56>
    After code:
      0: <V s$31 a> := Call __id2in (<r s_8_2_t0.S$29 via  Set67>)
      5: <V label$33 a> := Call __ro2sq (<r s_8_2_t0.O$28 via  Set67>)
      10: BReturn 0
    time      0.13% fanout         0 input        20 rows
    $31 (45 ) $33 (45 ) $41 (45 27 42 ) 
    s# 75 35 Select (<V s$31 a>, <V label$33 a>)
      set no: <r set_ctr$41 via  Set67 Set56>
  }
Warning: You might have a Cartesian product.



 0 msec 29% cpu,        21 rnd       998 seq         0% same seg   45.4545% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
