
  { 
    time       5.2% fanout         1 input         1 rows
    time        95% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    Precode:
      0: DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c string1>)
      7: BReturn 0
    RDF_QUAD_POGS   1.4e-07 rows(s_37_2_t0.O$31, s_37_2_t0.S$30)
     inlined  P =  IRI_ID"...reference/P854" 
    time         0% fanout         0 input         0 rows
    END Node
    After test:
    0: __rdf_strsqlval$33 := Call __rdf_strsqlval (s_37_2_t0.O$31,  0 )
    5: DB.DBA.RDF_LONG_OF_SQLVAL$35 := Call DB.DBA.RDF_LONG_OF_SQLVAL (__rdf_strsqlval$33)
    12: rdf_contains_impl$37 := Call rdf_contains_impl (DB.DBA.RDF_LONG_OF_SQLVAL$35, DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27)
    17: if ( 0  = rdf_contains_impl$37) then 22 else 21 unkn 22
    21: BReturn 1
    22: BReturn 0
    time         0% fanout         0 input         0 rows
    skip node  200  <none> set_ctr$49
    
    After code:
    0: var1$39 := Call __id2in (s_37_2_t0.S$30)
    5: var2$41 := Call __ro2sq (s_37_2_t0.O$31)
    10: BReturn 0
    time         0% fanout         0 input         0 rows
    Select (var1$39, var2$41)
  }


 0 msec 5% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
