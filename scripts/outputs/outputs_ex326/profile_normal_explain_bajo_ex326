http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/mbox	c.ellis@usairwaysgroup.com	
http://learningsparql.com/ns/data#i8301	http://xmlns.com/foaf/0.1/mbox	craigellis@yahoo.com	
http://learningsparql.com/ns/addressbook#cindy	http://xmlns.com/foaf/0.1/mbox	cindym@gmail.com	
http://learningsparql.com/ns/addressbook#craig	http://xmlns.com/foaf/0.1/mbox	c.ellis@usairwaysgroup.com	
http://learningsparql.com/ns/addressbook#richard	http://xmlns.com/foaf/0.1/mbox	richard49@hotmail.com	
http://learningsparql.com/ns/addressbook#craig	http://xmlns.com/foaf/0.1/mbox	craigellis@yahoo.com	
http://learningsparql.com/ns/addressbook#i0432	http://xmlns.com/foaf/0.1/mbox	richard49@hotmail.com	
http://learningsparql.com/ns/data#i5433	http://xmlns.com/foaf/0.1/mbox	katherine.duncan@elpaso.com	
http://learningsparql.com/ns/data#i0432	http://xmlns.com/foaf/0.1/mbox	richard49@hotmail.com	
http://learningsparql.com/ns/data#i2194	http://xmlns.com/foaf/0.1/mbox	bradley.perry@corning.com	
http://learningsparql.com/ns/data#i9771	http://xmlns.com/foaf/0.1/mbox	cindym@gmail.com	

  { 
    Precode:
      0:   { 
          time      0.59% fanout         1 input         1 rows
          time         2% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...mbox" ,  1 ,  1 )
            5: vector$29 := Call vector (vector$27)
            10: vector$31 := Call vector ()
            15: BReturn 0
          fork {
              time        95% fanout         0 input         1 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:        11 Fanout:         0
              RDF_QUAD        11 rows(s_9_5_t1.S$35, s_9_5_t1.O$34)
               inlined  P =  IRI_ID"...email" 
              
              After code:
              0: __ro2lo$37 := Call __ro2lo (s_9_5_t1.O$34)
              5: vector$39 := Call vector (s_9_5_t1.S$35, __ro2lo$37)
              10: if (user_aggr_notfirst$44  =  1 ) then 25 else 14 unkn 14
              14: user_aggr_notfirst$44  :=  := artm  1 
              18: user_aggr_ret$46 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$45 )
              25: user_aggr_ret$46 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$45 , vector$29, vector$39, vector$31,  1 )
              32: BReturn 0
            }
          time       1.9% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$41
          
          After code:
          0: callret-0$47 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$45 )
          7: BReturn 0
          time      0.28% fanout         0 input         1 rows
          Subquery Select(callret-0$47)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$107 )
      15: BReturn 0
    END Node
  }


 0 msec 32% cpu,        12 rnd        10 seq         0% same seg   46.1538% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
