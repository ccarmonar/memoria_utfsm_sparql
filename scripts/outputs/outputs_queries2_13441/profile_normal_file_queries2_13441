
  { 
    time      0.67% fanout         1 input         1 rows
      clear: (<V set_ctr$116 in>)
    s# 119 117 cluster outer seq start, set no <V set_ctr$116 in>    
    save ctx:()
      clear: (<V var2$29 in>, <V var1$28 a>, <V set_no$30 i>, <V var2$108 a>, <V var1$106 a>)
    s# 128 27 Subquery 27 
      multistate set no = <V set_no$30 i>
      { 
        time      0.42% fanout         1 input         1 rows
        
        s# 229 78 Fork 78 {  
                
            save ctx:()
              set no = <V set_no$30 i> array  <none>  save: 
            time      0.32% fanout         1 input         1 rows
            
            s# 204 58 Fork 58 {  
                    
                save ctx:()
                  set no = <V set_no$30 i> array  <none>  save: 
                  clear: (<V var1$32 rn>, <V set_no$33 i>)
                s# 134 31 Subquery 31 
                  multistate set no = <V set_no$33 i>
                  { 
                    time         7% fanout         8 input         1 rows
                      clear: (<V s_37_6_t0.P$35 rn>)
                      clear on continue: (<V s_37_6_t0.P$35 rn>)
                    s# 138 34 from DB.DBA.RDF_QUAD by RDF_QUAD_OP          8 rows   
                    Key RDF_QUAD_OP  ASC  (<V s_37_6_t0.P$35 rn>)
                     inlined  O =  IRI_ID"...Q46970" 
                    
                    time        31% fanout    82.875 input         8 rows
                    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:        83
                    
                    s# 148 38 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        1.2 rows   
                    Key RDF_QUAD_POGS  ASC  ()
                     P = <V s_37_6_t0.P$35 rn> ,  O =  IRI_ID"...Q46970" 
                    
                    time        60% fanout         0 input       663 rows
                    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
                      clear: (<V s_37_6_t1.S$42 rn>)
                      clear on continue: (<V s_37_6_t1.S$42 rn>)$35 (38 ) $161 (41 ) 
                    s# 157 41 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          1 rows   
                    Key RDF_QUAD_POGS  ASC  (<V s_37_6_t1.S$42 rn>)
                     P =  IRI_ID"...directClaim"  ,  O = <v k_s_37_6_t0.P$161 Set163 an>
                    vector param casts: <r s_37_6_t0.P$35 via  Set148>-> <v k_s_37_6_t0.P$161 Set163 an>
                    
                    time         0% fanout         0 input         0 rows
                    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.8 Fanout:         0
                    
                    s# 171 44 from DB.DBA.RDF_QUAD by RDF_QUAD        0.8 rows   
                    Key RDF_QUAD  ASC  ()
                     inlined  P =  IRI_ID"...type"  ,  S = <V s_37_6_t1.S$42 rn> ,  O =  IRI_ID"...Property" 
                    
                    time         0% fanout         0 input         0 rows
                      clear: (<V var1$32 rn>)$42 (44 ) 
                    s# 180 54 skip node  10000  <none> <r set_no$33 via  Set171 Set157 Set163 Set148 Set138>
                    After code:
                      0: <V var1$32 rn> :=  := artm <r s_37_6_t1.S$42 via  Set180 Set171>
                      4: BReturn 0
                    time         0% fanout         0 input         0 rows
                    
                    s# 134 46 Subquery Select(<V var1$32 rn>)
                      set no: <r set_no$33 via  Set180 Set171 Set157 Set163 Set148 Set138>
                  }
                
                time         0% fanout         0 input         0 rows
                Precode:
                  0: <V isnotnull$56 in> := Call isnotnull (<V var1$32 rn>)
                  5: BReturn 0
                  clear: (<V isnotnull$56 in>)$56 (59 ) 
                s# 196 59 Sort (HASH) set no <r set_no$30 via  Set134>(<V var1$32 rn>) -> (<V isnotnull$56 in>) up to   5.5e+02 distinct
                
            }
            time      0.34% fanout         0 input         1 rows
              clear: (<V aggregate$60 in>, <V var1$32 rn>)
              clear on continue: (<V aggregate$60 in>, <V var1$32 rn>)
            s# 211 66 group by read node  
            (<V var1$32 rn>, <V aggregate$60 in>)
            time         0% fanout         0 input         0 rows
            
            s# 221 79 Sort (HASH) set no <r set_no$30 via  Set211>(TOP  1  ) (<V aggregate$60 in>) -> (<V var1$32 rn>)
            
        }
        time      0.43% fanout         0 input         1 rows
          clear: (<V aggregate$60 in>, <V var1$32 rn>, <V var2$29 in>, <V var1$28 a>, <V __id2in$97 a>)
          clear on continue: (<V aggregate$60 in>, <V var1$32 rn>, <V var2$29 in>, <V var1$28 a>, <V __id2in$97 a>)
        s# 236 84 top order by node (<V var1$32 rn>, <V aggregate$60 in>)
        set no <V set_no$30 i>
        After code:
          0: <V __id2in$97 a> := Call __id2in (<V var1$32 rn>)
          5: <V var1$28 a> :=  := artm <V __id2in$97 a>
          9: <V var2$29 in> :=  := artm <V aggregate$60 in>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 128 99 Subquery Select(<V var1$28 a>, <V var2$29 in>)
          set no: <r set_no$30 via  Set236>
      }
    
    After code:
      0: <V var1$106 a> := Call __ro2sq (<V var1$28 a>)
      5: <V var2$108 a> := Call __ro2sq (<V var2$29 in>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $106 (27 ) $108 (27 ) $116 (27 117 ) 
    s# 255 110 Select (<V var1$106 a>, <V var2$108 a>)
      set no: <r set_ctr$116 via  Set128>
  }
Warning: You might have a Cartesian product.



 0 msec 11% cpu,       672 rnd       662 seq   98.3655% same seg  0.148588% same pg 
Compilation: 4 msec 0 reads         0% read 0 messages         0% clw
