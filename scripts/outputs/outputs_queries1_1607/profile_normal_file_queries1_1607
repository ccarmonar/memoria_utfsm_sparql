
  { 
    time        70% fanout         1 input         1 rows
      clear: (<V set_ctr$43 in>)
    s# 46 44 cluster outer seq start, set no <V set_ctr$43 in>    
    save ctx:()
    time        30% fanout         0 input         1 rows
    
    s# 55 27 END Node
    After test:
      0: BReturn 0
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.14 Fanout:         0
    Precode:
      0: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$28 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c language>)
      7: <V rdf_strstarts_impl$30 i> := Call rdf_strstarts_impl (<DB_NULL>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$28 a>)
      12: BReturn 0
      clear: (<V s_37_2_t0.O$33 an>, <V rdf_strstarts_impl$30 i>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$28 a>)
      clear on continue: (<V s_37_2_t0.O$33 an>)$28 (32 ) 
    s# 62 32 from DB.DBA.RDF_QUAD by RDF_QUAD       0.14 rows   
    Key RDF_QUAD  ASC  (<V s_37_2_t0.O$33 an>)
     inlined  P =  IRI_ID"...description"  ,  S =  IRI_ID"...Q90" 
    
    time         0% fanout         0 input         0 rows
      clear: (<V var1$35 a>)$33 () $30 (32 ) 
    s# 77 72 END Node
    After test:
      0: if (<c de> = <DB_NULL>) then 4 else 9 unkn 9
      4: if ( 0  = <r rdf_strstarts_impl$30 via  Set62>) then 9 else 8 unkn 9
      8: BReturn 1
      9: BReturn 0
    After code:
      0: <V var1$35 a> := Call __ro2sq (<r s_37_2_t0.O$33 via  Set77>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $35 (72 ) $43 (72 32 27 44 ) 
    s# 86 37 Select (<V var1$35 a>, <DB_NULL>)
      set no: <r set_ctr$43 via  Set77 Set62 Set55>
  }
Warning: You might have a Cartesian product.



 0 msec 0% cpu,         0 rnd         0 seq         0% same seg         0% same pg 
Compilation: 15 msec 0 reads         0% read 0 messages         0% clw
