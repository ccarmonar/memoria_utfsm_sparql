
  { 
    time         6% fanout         1 input         1 rows
      clear: (<V set_ctr$69 in>)
    s# 72 70 cluster outer seq start, set no <V set_ctr$69 in>    
    save ctx:()
    time        94% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.3 Fanout:         0
      clear: (<V s_37_12_t2.O$28 an>)
      clear on continue: (<V s_37_12_t2.O$28 an>)
    s# 81 27 from DB.DBA.RDF_QUAD by RDF_QUAD        0.3 rows   
    Key RDF_QUAD  ASC  (<V s_37_12_t2.O$28 an>)
     inlined  P =  IRI_ID"...direct/P2048"  ,  S =  IRI_ID"...Q9188" 
    
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   6.4e-05 Fanout:         0
      clear: (<V s_37_12_t3.O$31 an>)
      clear on continue: (<V s_37_12_t3.O$31 an>)$95 (30 ) 
    s# 91 30 from DB.DBA.RDF_QUAD by RDF_QUAD    6.4e-05 rows   
    Key RDF_QUAD  ASC  (<V s_37_12_t3.O$31 an>)
     inlined  P =  IRI_ID"...direct/P2044"  ,  S =  IRI_ID"...Q9188"  ,  O = <v cast$95 Set97 an>
    vector param casts: <V s_37_12_t2.O$28 an>-> <v cast$95 Set97 an>
    
    time         0% fanout         0 input         0 rows
      clear: (<V var1$61 a>)$28 (30 ) 
    s# 110 105 END Node
    After test:
      0: if (  { 
          time         0% fanout         0 input         0 rows
            clear: (<V set_ctr$41 in>)
          s# 114 42 cluster outer seq start, set no <V set_ctr$41 in>    
          save ctx:()
          time         0% fanout         0 input         0 rows
          Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   0.00011 Fanout:         0
          $127 (33 ) 
          s# 123 33 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    0.00011 rows Parallel, tail cost        10   max 1
          Key RDF_QUAD_POGS  ASC  ()
           inlined  P =  IRI_ID"...direct/P2048"  ,  O = <v k_s_37_12_t3.O$127 Set129 an> ,  S =  IRI_ID"...Q9188" 
          vector param casts: <r s_37_12_t3.O$31 via  Set114>-> <v k_s_37_12_t3.O$127 Set129 an>
          copy on branch $127 $41 $0 $0 sets: 72 81 97 91 114 
          
          time         0% fanout         0 input         0 rows
          $41 (33 42 ) 
          s# 136 35 Subquery Select( <none> )
            set no: <r set_ctr$41 via  Set123 Set129>
        }
      ) then 9 else 4 unkn 9
      4: if (  { 
          time         0% fanout         0 input         0 rows
            clear: (<V set_ctr$55 in>)
          s# 145 56 cluster outer seq start, set no <V set_ctr$55 in>    
          save ctx:()
          time         0% fanout         0 input         0 rows
          Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   6.4e-05 Fanout:         0
          $31 (56 ) $158 (47 ) 
          s# 154 47 from DB.DBA.RDF_QUAD by RDF_QUAD    6.4e-05 rows Parallel, tail cost        10   max 1
          Key RDF_QUAD  ASC  ()
           inlined  P =  IRI_ID"...direct/P2044"  ,  S =  IRI_ID"...Q9188"  ,  O = <v k_s_37_12_t3.O$158 Set160 an>
          vector param casts: <r s_37_12_t3.O$31 via  Set145>-> <v k_s_37_12_t3.O$158 Set160 an>
          copy on branch $158 $55 $0 $0 sets: 72 81 97 91 145 
          
          time         0% fanout         0 input         0 rows
          $55 (47 56 ) 
          s# 167 49 Subquery Select( <none> )
            set no: <r set_ctr$55 via  Set154 Set160>
        }
      ) then 9 else 8 unkn 9
      8: BReturn 1
      9: BReturn 0
    After code:
      0: <V var1$61 a> := Call __ro2sq (<r s_37_12_t2.O$28 via  Set110 Set91 Set97>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $69 (105 30 27 70 ) $61 (105 ) 
    s# 179 63 Select (<V var1$61 a>)
      set no: <r set_ctr$69 via  Set110 Set91 Set97 Set81>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 0 msec 2% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
