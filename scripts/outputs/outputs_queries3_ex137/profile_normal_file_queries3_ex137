Marshall	Updating Data with SPARQL	
Mutt	Updating Data with SPARQL	
Ellis	Updating Data with SPARQL	
Mutt	Updating Data with SPARQL	
Ellis	Updating Data with SPARQL	
Marshall	Updating Data with SPARQL	
Perry	Updating Data with SPARQL	
Duncan	Updating Data with SPARQL	
Marshall	Using SPARQL with non-RDF Data	
Mutt	Using SPARQL with non-RDF Data	
Ellis	Using SPARQL with non-RDF Data	
Mutt	Using SPARQL with non-RDF Data	
Ellis	Using SPARQL with non-RDF Data	
Marshall	Using SPARQL with non-RDF Data	
Perry	Using SPARQL with non-RDF Data	
Duncan	Using SPARQL with non-RDF Data	
Marshall	Combining Public and Private RDF Data	
Mutt	Combining Public and Private RDF Data	
Ellis	Combining Public and Private RDF Data	
Mutt	Combining Public and Private RDF Data	

  { 
    time       1.1% fanout         1 input         1 rows
      clear: (<V set_ctr$43 in>)
    s# 46 44 cluster outer seq start, set no <V set_ctr$43 in>    
    save ctx:()
    time        18% fanout         6 input         1 rows
      clear: (<V t8.O$28 an>)
      clear on continue: (<V t8.O$28 an>)
    s# 55 27 from DB.DBA.RDF_QUAD by RDF_QUAD          6 rows   
    Key RDF_QUAD  ASC  (<V t8.O$28 an>)
     inlined  P =  IRI_ID"...courseTitle" 
    
    time        80% fanout         8 input         6 rows
    Precode:
      0: <V courseName$30 a> := Call __ro2sq (<V t8.O$28 an>)
      5: BReturn 0
      clear: (<V t6.O$33 an>, <V courseName$30 a>, <V lastName$35 a>)
      clear on continue: (<V lastName$35 a>, <V t6.O$33 an>)$28 () 
    s# 65 32 from DB.DBA.RDF_QUAD by RDF_QUAD          8 rows   
    Key RDF_QUAD  ASC  (<V t6.O$33 an>)
     inlined  P =  IRI_ID"...lastName" 
    
    After code:
      0: <V lastName$35 a> := Call __ro2sq (<V t6.O$33 an>)
      5: BReturn 0
    time      0.16% fanout         0 input        48 rows
    $35 () $43 (32 27 44 ) $30 (32 ) 
    s# 75 37 Select (<V lastName$35 a>, <r courseName$30 via  Set65>)
      set no: <r set_ctr$43 via  Set65 Set55>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 16% cpu,        61 rnd        47 seq   8.06452% same seg    16.129% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
