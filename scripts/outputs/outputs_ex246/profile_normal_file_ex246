http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-dt-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-lang	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-fixedlang-x-any	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-dt-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-lang-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-fixedlang-x-any	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-uri	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-lang-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-fixedlang-x-any-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#default-iid	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-uri	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-literal	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-fixedlang-x-any-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-uri-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#default-iid-nonblank	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-literal	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-longvarchar	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#default-iid-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-uri-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	

  { 
    Precode:
      0:   { 
          time      0.37% fanout         1 input         1 rows
            clear: (<V ext_sets$76 i>, <V set_ctr$58 in>)
          s# 77 59 cluster outer seq start, set no <V set_ctr$58 in>    
          save ctx:()
          time         1% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ( 1 ,  0 ,  1 ,  1 ,  1 ,  2 )
            5: <V vector$29 x> := Call vector (<V vector$27 x>)
            10: <V vector$31 x> := Call vector ()
            15: BReturn 0
            clear: (<V vector$31 x>, <V vector$29 x>, <V vector$27 x>)$27 (60 ) 
          s# 122 60 Fork 60 {  
                clear: (<V ctor-1$34 x>, <V set_no$35 i>, <V user_aggr_ret$63 x>)$31 (33 ) $29 (33 ) 
              s# 88 33 Subquery 33 
                multistate set no = <V set_no$35 i>
                { 
                  time        53% fanout      1000 input         1 rows
                  Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:     5e+06 Fanout:     1e+03
                    clear: (<V t3.O$37 an>, <V t3.P$38 rn>, <V t3.S$39 rn>)
                    clear on continue: (<V t3.O$37 an>, <V t3.P$38 rn>, <V t3.S$39 rn>)
                  s# 92 36 from DB.DBA.RDF_QUAD by RDF_QUAD      5e+06 rows   
                  Key RDF_QUAD  ASC  (<V t3.S$39 rn>, <V t3.P$38 rn>, <V t3.O$37 an>)
                  
                  
                  time        43% fanout      0.04 input      1000 rows
                    clear: (<V ctor-1$34 x>, <V vector$46 x>, <V DB.DBA.RDF_MAKE_IID_OF_LONG$44 r>, <V __ro2lo$42 a>)$37 () $38 () $39 () 
                  s# 104 56 skip node  40  <none> <r set_no$35 via  Set92>
                  After code:
                    0: <V __ro2lo$42 a> := Call __ro2lo (<r t3.O$37 via  Set104>)
                    5: <V DB.DBA.RDF_MAKE_IID_OF_LONG$44 r> := Call DB.DBA.RDF_MAKE_IID_OF_LONG (<V __ro2lo$42 a>)
                    12: <V vector$46 x> := Call vector (<r t3.S$39 via  Set104>, <r t3.P$38 via  Set104>, <V DB.DBA.RDF_MAKE_IID_OF_LONG$44 r>)
                    17: <V ctor-1$34 x> :=  := artm <V vector$46 x>
                    21: BReturn 0
                  time       0.2% fanout         0 input        40 rows
                  
                  s# 88 48 Subquery Select(<V ctor-1$34 x>)
                    set no: <r set_no$35 via  Set104 Set92>
                }
              
              After code:
                0: if (user_aggr_notfirst$61  =  1 ) then 15 else 4 unkn 4
                4: user_aggr_notfirst$61  :=  := artm  1 
                8: <V user_aggr_ret$63 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$62 )
                15: <V user_aggr_ret$63 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$62 , <r vector$29 via  Set88>, <V ctor-1$34 x>, <r vector$31 via  Set88>,  1 )
                22: BReturn 0
          }
          time       1.3% fanout         1 input         1 rows
            clear: (<V callret-0$64 x>)
          s# 129 74 skip node  1  <none> <V set_ctr$58 in>
          After code:
            0: <V callret-0$64 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$62 )
            7: BReturn 0
          time      0.12% fanout         0 input         1 rows
          $64 (74 ) $76 (74 60 59 ) $58 (74 60 59 ) 
          s# 137 66 Subquery Select(<V callret-0$64 x>)
            set no: <r set_ctr$58 via  Set129>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$145 )
      15: BReturn 0
    
    END Node
  }


 3 msec 55% cpu,         1 rnd       998 seq         0% same seg         0% same pg 
23 disk reads, 0 read ahead,    2.2116% wait
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
