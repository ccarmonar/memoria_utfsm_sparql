Dick	Mutt	
Cindy	Marshall	
Craig	Ellis	
Richard	Mutt	
Craig	Ellis	
Cindy	Marshall	
Bradley	Perry	
Katherine	Duncan	

  { 
    time      0.95% fanout         1 input         1 rows
      clear: (<V set_ctr$34 in>)
    s# 74 35 cluster outer seq start, set no <V set_ctr$34 in>    
    save ctx:()
    time        15% fanout         8 input         1 rows
      clear: (<V t6.O$28 an>, <V t6.S$29 rn>)
      clear on continue: (<V t6.O$28 an>, <V t6.S$29 rn>)
    s# 83 27 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          8 rows   
    Key RDF_QUAD_POGS  ASC  (<V t6.S$29 rn>, <V t6.O$28 an>)
     inlined  P =  IRI_ID"...lastName" 
    
    time      0.34% fanout         1 input         8 rows
      clear: (<V set_ctr$37 i>)
    s# 94 41 cluster outer seq start, set no <V set_ctr$37 i>    
    save ctx:()
    time        16% fanout     0.125 input         8 rows
      clear: (<V t7.O$32 a>)
      clear on continue: (<V t7.O$32 a>)$107 (31 ) 
    s# 103 31 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V t7.O$32 a>)
     inlined  P =  IRI_ID"...nick"  ,  S = <v k_t6.S$107 Set109 rn>
    vector param casts: <r t6.S$29 via  Set94>-> <v k_t6.S$107 Set109 rn>
    
    time      0.55% fanout         8 input         1 rows
    $37 (31 41 ) 
    s# 117 36 end of outer seq <r set_ctr$37 via  Set103 Set109>
     out: (<V t7.O$32 a>)
     shadow: ( <none> )
    time       1.6% fanout         1 input         8 rows
      clear: (<V set_ctr$50 i>)
    s# 125 54 cluster outer seq start, set no <V set_ctr$50 i>    
    save ctx:()
    time        15% fanout         1 input         8 rows
      clear: (<V t9.O$47 a>)
      clear on continue: (<V t9.O$47 a>)$138 (46 ) $29 (54 36 31 41 ) 
    s# 134 46 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V t9.O$47 a>)
     inlined  P =  IRI_ID"...firstName"  ,  S = <v k_t6.S$138 Set140 rn>
    vector param casts: <r t6.S$29 via  Set125 Set117>-> <v k_t6.S$138 Set140 rn>
    
    time       4.3% fanout     0.875 input         8 rows
    
    s# 153 148 END Node
    After test:
      0: if (<r t7.O$32 via  Set134 Set140 Set125>  IS NULL   0 ) then 8 else 4 unkn 4
      4: if (<r t7.O$32 via  Set134 Set140 Set125> = <V t9.O$47 a>) then 8 else 9 unkn 9
      8: BReturn 1
      9: BReturn 0
    time        46% fanout   1.14286 input         7 rows
      clear: (<V t9.O$166 a>, <V __ro2sq$65 a>, <V first$61 a>, <V __ro2sq$63 a>, <V last$59 a>)$32 (148 46 54 36 ) $47 (148 ) $50 (148 46 54 ) $28 (148 46 54 36 31 41 ) 
    s# 162 49 end of outer seq <r set_ctr$50 via  Set153 Set134 Set140>
     out: (<r t9.O$47 via  Set153>)
     shadow: (<V t9.O$166 a>)
    After code:
      0: <V last$59 a> := Call __ro2sq (<r t6.O$28 via  Set162 Set117>)
      5: <V __ro2sq$63 a> := Call __ro2sq (<r t7.O$32 via  Set162>)
      10: if (<V __ro2sq$63 a>  IS NULL  <DB_NULL>) then 19 else 14 unkn 19
      14: <V first$61 a> :=  := artm <V __ro2sq$63 a>
      18: Jump 37 (level=0)
      19: <V __ro2sq$65 a> := Call __ro2sq (<V t9.O$166 a>)
      24: if (<V __ro2sq$65 a>  IS NULL  <DB_NULL>) then 33 else 28 unkn 33
      28: <V first$61 a> :=  := artm <V __ro2sq$65 a>
      32: Jump 37 (level=0)
      33: <V first$61 a> :=  := artm <DB_NULL>
      37: BReturn 0
    time      0.28% fanout         0 input         8 rows
    $34 (49 148 46 54 36 31 41 27 35 ) $59 (49 ) $61 (49 ) 
    s# 174 67 Select (<V first$61 a>, <V last$59 a>)
      set no: <r set_ctr$34 via  Set162 Set117 Set83>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 0 msec 19% cpu,        33 rnd         7 seq   38.2353% same seg   29.4118% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
