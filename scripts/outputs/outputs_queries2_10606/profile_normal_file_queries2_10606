
  { 
    time       2.8% fanout         1 input         1 rows
      clear: (<V set_ctr$61 in>)
    s# 64 62 cluster outer seq start, set no <V set_ctr$61 in>    
    save ctx:()
    time        97% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    Precode:
      0: <V note$27 r> := Call __i2idn (<tag 182 flag 1 c http://www.w3.org/2004/02/skos/core#note>)
      5: BReturn 0
      clear: (<V s_37_8_t2.S$30 rn>, <V s_37_8_t2.O$31 an>, <V note$27 r>)
      clear on continue: (<V s_37_8_t2.O$31 an>, <V s_37_8_t2.S$30 rn>)$77 (29 ) $27 (29 ) 
    s# 73 29 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.4e-07 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_37_8_t2.O$31 an>, <V s_37_8_t2.S$30 rn>)
     inlined  P = <v k_note$77 Set79 rn>
    vector param casts: <V note$27 r>-> <v k_note$77 Set79 rn>
    
    time         0% fanout         0 input         0 rows
      clear: (<V rdf_regex_impl$35 i>, <V __ro2sq$33 a>)
    s# 93 88 END Node
    After test:
      0: <V __ro2sq$33 a> := Call __ro2sq (<V s_37_8_t2.O$31 an>)
      5: <V rdf_regex_impl$35 i> := Call rdf_regex_impl (<V __ro2sq$33 a>, <c string1>, <c i>)
      10: if ( 0  = <V rdf_regex_impl$35 i>) then 15 else 14 unkn 15
      14: BReturn 1
      15: BReturn 0
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         3 Fanout:         0
    Precode:
      0: <V var3$37 a> := Call __ro2sq (<r s_37_8_t2.O$31 via  Set93>)
      5: BReturn 0
      clear: (<V s_37_8_t1.O$40 an>, <V s_37_8_t1.S$41 rn>, <V var3$37 a>)
      clear on continue: (<V s_37_8_t1.S$41 rn>, <V s_37_8_t1.O$40 an>)$31 (88 ) $105 (39 ) $30 (88 ) 
    s# 101 39 from DB.DBA.RDF_QUAD by RDF_QUAD          3 rows   
    Key RDF_QUAD  ASC  (<V s_37_8_t1.S$41 rn>, <V s_37_8_t1.O$40 an>)
     inlined  P =  IRI_ID"...prefLabel" 
    row specs:  O = <v k_s_37_8_t2.S$105 Set107 an>
    vector param casts: <r s_37_8_t2.S$30 via  Set93>-> <v k_s_37_8_t2.S$105 Set107 an>
    
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.8 Fanout:         0
      clear: (<V s_37_8_t0.S$44 rn>)
      clear on continue: (<V s_37_8_t0.S$44 rn>)$41 () 
    s# 116 43 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        0.8 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_37_8_t0.S$44 rn>)
     inlined  P =  IRI_ID"...type"  ,  O =  IRI_ID"...Concept"  ,  S = <V s_37_8_t1.S$41 rn>
    
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
      clear: (<V s_37_8_t3.O$47 an>, <V var4$53 a>, <V var1$51 a>, <V var2$49 a>)
      clear on continue: (<V var2$49 a>, <V var1$51 a>, <V var4$53 a>, <V s_37_8_t3.O$47 an>)$130 (46 ) $40 (43 ) $44 () 
    s# 126 46 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V s_37_8_t3.O$47 an>)
     inlined  P =  IRI_ID"...literalForm"  ,  S = <v k_s_37_8_t1.O$130 Set132 rn>
    vector param casts: <r s_37_8_t1.O$40 via  Set116>-> <v k_s_37_8_t1.O$130 Set132 rn>
    
    After code:
      0: <V var2$49 a> := Call __ro2sq (<r s_37_8_t1.O$40 via  Set126 Set132 Set116>)
      5: <V var1$51 a> := Call __id2in (<r s_37_8_t0.S$44 via  Set126 Set132>)
      10: <V var4$53 a> := Call __ro2sq (<V s_37_8_t3.O$47 an>)
      15: BReturn 0
    time         0% fanout         0 input         0 rows
    $37 (46 43 39 ) $49 () $51 () $53 () $61 (46 43 39 88 29 62 ) 
    s# 140 55 Select (<V var1$51 a>, <V var2$49 a>, <r var3$37 via  Set126 Set132 Set116 Set101 Set107>, <V var4$53 a>)
      set no: <r set_ctr$61 via  Set126 Set132 Set116 Set101 Set107 Set93 Set73 Set79>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 0% cpu,         4 rnd         0 seq         0% same seg         0% same pg 
Compilation: 91 msec 1 reads   26.8373% read 0 messages         0% clw
