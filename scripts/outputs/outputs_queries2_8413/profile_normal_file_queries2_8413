
  { 
    time       5.5% fanout         1 input         1 rows
      clear: (<V set_ctr$56 in>)
    s# 62 57 cluster outer seq start, set no <V set_ctr$56 in>    
    save ctx:()
    time        95% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    Precode:
      0: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c Category:>)
      7: BReturn 0
      clear: (<V s_37_6_t0.S$30 rn>, <V s_37_6_t0.O$31 an>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a>)
      clear on continue: (<V s_37_6_t0.O$31 an>, <V s_37_6_t0.S$30 rn>)
    s# 71 29 from DB.DBA.RDF_QUAD by RDF_QUAD    1.4e-07 rows   
    Key RDF_QUAD  ASC  (<V s_37_6_t0.O$31 an>, <V s_37_6_t0.S$30 rn>)
     inlined  P =  IRI_ID"...isPartOf" 
    
    time         0% fanout         0 input         0 rows
    
    s# 87 82 END Node
    After test:
      0: if (<V s_37_6_t0.O$31 an> =  IRI_ID"..." ) then 5 else 4 unkn 5
      4: BReturn 1
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
      clear: (<V s_37_6_t2.O$34 an>, <V s_37_6_t2.S$35 rn>)
      clear on continue: (<V s_37_6_t2.S$35 rn>, <V s_37_6_t2.O$34 an>)$99 (33 ) 
    s# 95 33 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V s_37_6_t2.S$35 rn>, <V s_37_6_t2.O$34 an>)
     inlined  P =  IRI_ID"...about"  ,  S = <v k_s_37_6_t0.S$99 Set101 rn>
    vector param casts: <r s_37_6_t0.S$30 via  Set87>-> <v k_s_37_6_t0.S$99 Set101 rn>
    
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       5.8 Fanout:         0
    Precode:
      0: <V var2$37 a> := Call __ro2sq (<r s_37_6_t0.O$31 via  Set95 Set101 Set87>)
      5: <V var1$39 a> := Call __ro2sq (<V s_37_6_t2.O$34 an>)
      10: BReturn 0
      clear: (<V s_37_6_t1.O$42 an>, <V var1$39 a>, <V var2$37 a>)
      clear on continue: (<V s_37_6_t1.O$42 an>)$31 (33 82 ) $34 () $114 (41 ) $30 (33 82 ) 
    s# 110 41 from DB.DBA.RDF_QUAD by RDF_QUAD        5.8 rows   
    Key RDF_QUAD  ASC  (<V s_37_6_t1.O$42 an>)
     inlined  P =  IRI_ID"...name"  ,  S = <v k_s_37_6_t0.S$114 Set116 rn>
    vector param casts: <r s_37_6_t0.S$30 via  Set95 Set101 Set87>-> <v k_s_37_6_t0.S$114 Set116 rn>
    
    time         0% fanout         0 input         0 rows
      clear: (<V rdf_strstarts_impl$46 i>, <V __ro2lo$44 a>)$27 (41 33 82 29 ) 
    s# 129 124 END Node
    After test:
      0: <V __ro2lo$44 a> := Call __ro2lo (<V s_37_6_t1.O$42 an>)
      5: <V rdf_strstarts_impl$46 i> := Call rdf_strstarts_impl (<V __ro2lo$44 a>, <r DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 via  Set110 Set116 Set95 Set101 Set87 Set71>)
      10: if ( 0  = <V rdf_strstarts_impl$46 i>) then 15 else 14 unkn 15
      14: BReturn 1
      15: BReturn 0
    time         0% fanout         0 input         0 rows
      clear: (<V var3$48 a>)$42 (124 ) 
    s# 137 60 skip node  5000  <none> <r set_ctr$56 via  Set129 Set110 Set116 Set95 Set101 Set87 Set71>
    After code:
      0: <V var3$48 a> := Call __ro2sq (<r s_37_6_t1.O$42 via  Set137 Set129>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $37 (60 124 41 ) $39 (60 124 41 ) $48 (60 ) $56 (60 124 41 33 82 29 57 ) 
    s# 145 50 Select (<r var1$39 via  Set137 Set129 Set110 Set116>, <r var2$37 via  Set137 Set129 Set110 Set116>, <V var3$48 a>)
      set no: <r set_ctr$56 via  Set137 Set129 Set110 Set116 Set95 Set101 Set87 Set71>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 0 msec 2% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
