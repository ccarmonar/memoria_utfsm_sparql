http://www.openlinksw.com/schemas/virtrdf#	
http://www.w3.org/ns/ldp#	
urn:activitystreams-owl:map	
http://localhost:8890/sparql	
http://localhost:8890/DAV/	
http://www.w3.org/2002/07/owl#	
urn:sparql:bind:tests	
http://dbpedia.org/schema/property_rules#	
dbprdf-label	
http://www.wikidata.org/	
http://wikidata.org	
http://www.learningsparql.com/examples/	
http://www.learningsparql.com/second_edition/	

  { 
    time    0.0066% fanout         1 input         1 rows
    time     1e+02% fanout        13 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         0 Fanout:        13
    Precode:
      0: return_iris$32 :=  := artm  1 
      4: lim$34 :=  := artm <DB_NULL>
      8: proc_ctr$28 :=  := artm  0 
      12:  <none>  := Call __reset_temp ( 139973149721184 )
      17:  <proc table>  := Call DB.DBA.SPARQL_SELECT_KNOWN_GRAPHS ( 1 , <DB_NULL>)
      24: BReturn 0
    Key from temp (proc_ctr$28, g_enum$30)
    
    
    After code:
    0: g$41 := Call __box_flags_tweak (g_enum$30,  1 )
    5: BReturn 0
    time    0.0013% fanout         0 input        13 rows
    Select (g$41)
  }


 46 msec 98% cpu,      9964 rnd     53172 seq         0% same seg         0% same pg 
Compilation: 0 msec 0 reads         0% read 0 messages         0% clw
