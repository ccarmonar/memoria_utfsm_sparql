http://learningsparql.com/ns/data#course59	http://learningsparql.com/ns/addressbook#courseTitle	Using SPARQL with non-RDF Data	
http://learningsparql.com/ns/data#i8301	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#course85	http://learningsparql.com/ns/addressbook#courseTitle	Updating Data with SPARQL	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course85	

  { 
    Precode:
      0:   { 
          time      0.28% fanout         1 input         1 rows
          time      0.75% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ()
            5: vector$29 := Call vector (<c uid>,  0 )
            10: BReturn 0
          fork {
              time        11% fanout         0 input         1 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         2 Fanout:         0
              RDF_QUAD         2 rows(s_7_2_t0.O$32)
               inlined  P =  IRI_ID"...takingCourse"  ,  S =  IRI_ID"...i0432" 
              
              After code:
              0: __ro2lo$34 := Call __ro2lo (s_7_2_t0.O$32)
              5: vector$36 := Call vector (__ro2lo$34)
              10: if (user_aggr_notfirst$41  =  1 ) then 25 else 14 unkn 14
              14: user_aggr_notfirst$41  :=  := artm  1 
              18: user_aggr_ret$43 := Call DB.DBA.SPARQL_DESC_AGG_INIT (user_aggr_env$42 )
              25: user_aggr_ret$43 := Call DB.DBA.SPARQL_DESC_AGG_ACC (user_aggr_env$42 , vector$36)
              32: BReturn 0
            }
          time        88% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$38
          
          After code:
          0: DB.DBA.SPARQL_DESC_AGG_FIN$44 := Call DB.DBA.SPARQL_DESC_AGG_FIN (user_aggr_env$42 )
          7: callret-0$46 := Call DB.DBA.SPARQL_DESC_DICT (DB.DBA.SPARQL_DESC_AGG_FIN$44, vector$27,  0 , <DB_NULL>, <DB_NULL>, vector$29)
          14: BReturn 0
          time       0.1% fanout         0 input         1 rows
          Subquery Select(callret-0$46)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$105 )
      15: BReturn 0
    END Node
  }


 2 msec 49% cpu,        17 rnd         5 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
