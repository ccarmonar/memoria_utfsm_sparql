http://learningsparql.com/ns/data#course59	http://learningsparql.com/ns/addressbook#courseTitle	Using SPARQL with non-RDF Data	
http://learningsparql.com/ns/data#i8301	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#course85	http://learningsparql.com/ns/addressbook#courseTitle	Updating Data with SPARQL	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course85	

  { 
    Precode:
      0:   { 
          time      0.27% fanout         1 input         1 rows
            clear: (<V ext_sets$58 i>, <V set_ctr$38 in>)
          s# 59 39 cluster outer seq start, set no <V set_ctr$38 in>    
          save ctx:()
          time       0.7% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ()
            5: <V vector$29 x> := Call vector (<c uid>,  0 )
            10: BReturn 0
            clear: (<V vector$29 x>, <V vector$27 x>)
          s# 82 40 Fork 40 {  
              time        10% fanout         0 input         1 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         2 Fanout:         0
                clear: (<V s_7_2_t0.O$32 an>, <V user_aggr_ret$43 x>, <V vector$36 x>, <V __ro2lo$34 a>)
                clear on continue: (<V s_7_2_t0.O$32 an>, <V user_aggr_ret$43 x>, <V vector$36 x>, <V __ro2lo$34 a>)
              s# 70 31 from DB.DBA.RDF_QUAD by RDF_QUAD          2 rows   
              Key RDF_QUAD  ASC  (<V s_7_2_t0.O$32 an>)
               inlined  P =  IRI_ID"...takingCourse"  ,  S =  IRI_ID"...i0432" 
              
              After code:
                0: <V __ro2lo$34 a> := Call __ro2lo (<V s_7_2_t0.O$32 an>)
                5: <V vector$36 x> := Call vector (<V __ro2lo$34 a>)
                10: if (user_aggr_notfirst$41  =  1 ) then 25 else 14 unkn 14
                14: user_aggr_notfirst$41  :=  := artm  1 
                18: <V user_aggr_ret$43 x> := Call DB.DBA.SPARQL_DESC_AGG_INIT (user_aggr_env$42 )
                25: <V user_aggr_ret$43 x> := Call DB.DBA.SPARQL_DESC_AGG_ACC (user_aggr_env$42 , <V vector$36 x>)
                32: BReturn 0
          }
          time        89% fanout         1 input         1 rows
            clear: (<V callret-0$46 x>, <V DB.DBA.SPARQL_DESC_AGG_FIN$44 x>)$27 (40 ) $29 (40 ) 
          s# 89 56 skip node  1  <none> <V set_ctr$38 in>
          After code:
            0: <V DB.DBA.SPARQL_DESC_AGG_FIN$44 x> := Call DB.DBA.SPARQL_DESC_AGG_FIN (user_aggr_env$42 )
            7: <V callret-0$46 x> := Call DB.DBA.SPARQL_DESC_DICT (<V DB.DBA.SPARQL_DESC_AGG_FIN$44 x>, <r vector$27 via  Set89>,  0 , <DB_NULL>, <DB_NULL>, <r vector$29 via  Set89>)
            14: BReturn 0
          time     0.097% fanout         0 input         1 rows
          $38 (56 40 39 ) $46 (56 ) $58 (56 40 39 ) 
          s# 97 48 Subquery Select(<V callret-0$46 x>)
            set no: <r set_ctr$38 via  Set89>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$105 )
      15: BReturn 0
    
    END Node
  }


 1 msec 39% cpu,        15 rnd         5 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
