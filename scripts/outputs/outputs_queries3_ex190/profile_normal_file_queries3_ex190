http://learningsparql.com/ns/data#mike	http://learningsparql.com/ns/addressbook#hasAunt	http://learningsparql.com/ns/data#gene	
http://learningsparql.com/ns/data#jane	http://learningsparql.com/ns/addressbook#hasAunt	http://learningsparql.com/ns/data#joan	

  { 
    Precode:
      0:   { 
          time      0.99% fanout         1 input         1 rows
            clear: (<V ext_sets$65 i>, <V set_ctr$47 in>)
          s# 66 48 cluster outer seq start, set no <V set_ctr$47 in>    
          save ctx:()
          time       3.4% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...hasAunt" ,  1 ,  1 )
            5: <V vector$29 x> := Call vector (<V vector$27 x>)
            10: <V vector$31 x> := Call vector ()
            15: BReturn 0
            clear: (<V vector$31 x>, <V vector$29 x>, <V vector$27 x>)$27 (49 ) 
          s# 144 49 Fork 49 {  
              time        19% fanout         4 input         1 rows
                clear: (<V s_16_11_t1.S$34 rn>, <V s_16_11_t1.O$35 an>)
                clear on continue: (<V s_16_11_t1.S$34 rn>, <V s_16_11_t1.O$35 an>)
              s# 77 33 from DB.DBA.RDF_QUAD by RDF_QUAD          4 rows   
              Key RDF_QUAD  ASC  (<V s_16_11_t1.O$35 an>, <V s_16_11_t1.S$34 rn>)
               inlined  P =  IRI_ID"...hasParent" 
              
              time        11% fanout       0.5 input         4 rows
                clear: (<V s_16_11_t2.O$38 an>)
                clear on continue: (<V s_16_11_t2.O$38 an>)$92 (37 ) 
              s# 88 37 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
              Key RDF_QUAD  ASC  (<V s_16_11_t2.O$38 an>)
               inlined  P =  IRI_ID"...hasParent"  ,  S = <v k_s_16_11_t1.O$92 Set94 rn>
              vector param casts: <V s_16_11_t1.O$35 an>-> <v k_s_16_11_t1.O$92 Set94 rn>
              
              time        12% fanout         2 input         2 rows
                clear: (<V s_16_11_t3.S$41 rn>)
                clear on continue: (<V s_16_11_t3.S$41 rn>)$38 () $106 (40 ) 
              s# 102 40 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        2.7 rows   
              Key RDF_QUAD_POGS  ASC  (<V s_16_11_t3.S$41 rn>)
               P =  IRI_ID"...hasParent"  ,  O = <v cast$106 Set108 an>
              vector param casts: <V s_16_11_t2.O$38 an>-> <v cast$106 Set108 an>
              
              time       2.7% fanout       0.5 input         4 rows
              $35 (40 37 ) 
              s# 121 116 END Node
              After test:
                0: if (<r s_16_11_t1.O$35 via  Set102 Set108 Set88 Set94> = <V s_16_11_t3.S$41 rn>) then 5 else 4 unkn 5
                4: BReturn 1
                5: BReturn 0
              time        48% fanout         0 input         2 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.3 Fanout:         0
              Precode:
                0: <V vector$43 x> := Call vector (<r s_16_11_t1.S$34 via  Set121 Set102 Set108 Set88 Set94>, <r s_16_11_t3.S$41 via  Set121>)
                5: BReturn 0
                clear: (<V vector$43 x>, <V user_aggr_ret$52 x>)
                clear on continue: (<V user_aggr_ret$52 x>)$34 (116 40 37 ) $133 (45 ) $41 (116 ) $43 (45 ) 
              s# 129 45 from DB.DBA.RDF_QUAD by RDF_QUAD        1.3 rows   
              Key RDF_QUAD  ASC  ()
               inlined  P =  IRI_ID"...gender"  ,  S = <v k_s_16_11_t3.S$133 Set135 rn> ,  O =  IRI_ID"...female" 
              vector param casts: <r s_16_11_t3.S$41 via  Set121>-> <v k_s_16_11_t3.S$133 Set135 rn>
              
              After code:
                0: if (user_aggr_notfirst$50  =  1 ) then 15 else 4 unkn 4
                4: user_aggr_notfirst$50  :=  := artm  1 
                8: <V user_aggr_ret$52 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$51 )
                15: <V user_aggr_ret$52 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$51 , <r vector$29 via  Set129 Set135 Set121 Set102 Set108 Set88 Set94 Set77>, <r vector$43 via  Set129 Set135>, <r vector$31 via  Set129 Set135 Set121 Set102 Set108 Set88 Set94 Set77>,  1 )
                22: BReturn 0
          }
          time       3.4% fanout         1 input         1 rows
            clear: (<V callret-0$53 x>)
          s# 151 63 skip node  1  <none> <V set_ctr$47 in>
          After code:
            0: <V callret-0$53 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$51 )
            7: BReturn 0
          time      0.45% fanout         0 input         1 rows
          $65 (63 49 48 ) $47 (63 49 48 ) $53 (63 ) 
          s# 159 55 Subquery Select(<V callret-0$53 x>)
            set no: <r set_ctr$47 via  Set151>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$167 )
      15: BReturn 0
    
    END Node
  }
Warning: You might have a Cartesian product.



 1 msec 13% cpu,        11 rnd         5 seq   41.6667% same seg   8.33333% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
