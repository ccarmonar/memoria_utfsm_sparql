http://learningsparql.com/ns/addressbook#craig	http://learningsparql.com/ns/addressbook#email	craigellis@yahoo.com	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#areaCode	229	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#homeTel	(229) 276-5135	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#nick	Dick	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#lastName	Mutt	
http://learningsparql.com/ns/addressbook#richard	http://learningsparql.com/ns/addressbook#homeTel	(229) 276-5135	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#homeTel	(245) 646-5488	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/addressbook#cindy	http://learningsparql.com/ns/addressbook#email	cindym@gmail.com	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#lastName	Mutt	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#firstName	Richard	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#address	nodeID://b10003	
http://learningsparql.com/ns/addressbook#craig	http://learningsparql.com/ns/addressbook#homeTel	(194) 966-1505	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course85	
http://learningsparql.com/ns/addressbook#cindy	http://learningsparql.com/ns/addressbook#areaCode	245	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course34	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#firstName	Richard	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#postalCode	49345	
http://learningsparql.com/ns/addressbook#i0432	http://learningsparql.com/ns/addressbook#address	nodeID://b10013	

  { 
    Precode:
      0:   { 
          time      0.14% fanout         1 input         1 rows
            clear: (<V ext_sets$75 i>, <V set_ctr$57 in>)
          s# 76 58 cluster outer seq start, set no <V set_ctr$57 in>    
          save ctx:()
          time      0.51% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ( 1 ,  0 ,  1 ,  2 ,  1 ,  3 )
            5: <V vector$29 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...areaCode" ,  1 ,  1 )
            10: <V vector$31 x> := Call vector (<V vector$27 x>, <V vector$29 x>)
            15: <V vector$33 x> := Call vector ()
            20: BReturn 0
            clear: (<V vector$33 x>, <V vector$31 x>, <V vector$29 x>, <V vector$27 x>)$27 (59 ) $29 (59 ) 
          s# 124 59 Fork 59 {  
              time       2.9% fanout         6 input         1 rows
                clear: (<V t2.O$36 an>, <V t2.S$37 rn>)
                clear on continue: (<V t2.O$36 an>, <V t2.S$37 rn>)
              s# 87 35 from DB.DBA.RDF_QUAD by RDF_QUAD          6 rows   
              Key RDF_QUAD  ASC  (<V t2.S$37 rn>, <V t2.O$36 an>)
               inlined  P =  IRI_ID"...homeTel" 
              
              time        20% fanout         5 input         6 rows
              Precode:
                0: <V __ro2lo$39 a> := Call __ro2lo (<V t2.O$36 an>)
                5: <V rdf_substr_impl$41 s> := Call rdf_substr_impl (<V __ro2lo$39 a>,  2 ,  3 )
                10: <V DB.DBA.RDF_LONG_OF_SQLVAL$43 a> := Call DB.DBA.RDF_LONG_OF_SQLVAL (<V rdf_substr_impl$41 s>)
                17: BReturn 0
                clear: (<V t3.P$46 rn>, <V DB.DBA.RDF_LONG_OF_SQLVAL$43 a>, <V rdf_substr_impl$41 s>, <V __ro2lo$39 a>)
                clear on continue: (<V t3.P$46 rn>)$36 () $39 (45 ) $41 (45 ) 
              s# 98 45 from DB.DBA.RDF_QUAD by RDF_QUAD_SP        9.2 rows   
              Key RDF_QUAD_SP  ASC  (<V t3.P$46 rn>)
               inlined  S = <V t2.S$37 rn>
              
              time        76% fanout         0 input        30 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
                clear: (<V t3.O$50 an>, <V user_aggr_ret$62 x>, <V vector$55 x>, <V __ro2lo$53 a>)
                clear on continue: (<V __ro2lo$53 a>, <V vector$55 x>, <V user_aggr_ret$62 x>, <V t3.O$50 an>)$37 (45 ) $43 (45 ) $46 () $112 (49 ) 
              s# 108 49 from DB.DBA.RDF_QUAD by RDF_QUAD        1.2 rows   
              Key RDF_QUAD  ASC  (<V t3.O$50 an>)
               inlined  P = <V t3.P$46 rn> ,  S = <v k_t2.S$112 Set114 rn>
              vector param casts: <r t2.S$37 via  Set98>-> <v k_t2.S$112 Set114 rn>
              
              After code:
                0: <V __ro2lo$53 a> := Call __ro2lo (<V t3.O$50 an>)
                5: <V vector$55 x> := Call vector (<r t2.S$37 via  Set108 Set114 Set98>, <r DB.DBA.RDF_LONG_OF_SQLVAL$43 via  Set108 Set114 Set98>, <r t3.P$46 via  Set108 Set114>, <V __ro2lo$53 a>)
                10: if (user_aggr_notfirst$60  =  1 ) then 25 else 14 unkn 14
                14: user_aggr_notfirst$60  :=  := artm  1 
                18: <V user_aggr_ret$62 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$61 )
                25: <V user_aggr_ret$62 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$61 , <r vector$31 via  Set108 Set114 Set98 Set87>, <V vector$55 x>, <r vector$33 via  Set108 Set114 Set98 Set87>,  1 )
                32: BReturn 0
          }
          time      0.62% fanout         1 input         1 rows
            clear: (<V callret-0$63 x>)
          s# 131 73 skip node  1  <none> <V set_ctr$57 in>
          After code:
            0: <V callret-0$63 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$61 )
            7: BReturn 0
          time     0.079% fanout         0 input         1 rows
          $63 (73 ) $75 (73 59 58 ) $57 (73 59 58 ) 
          s# 139 65 Subquery Select(<V callret-0$63 x>)
            set no: <r set_ctr$57 via  Set131>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$147 )
      15: BReturn 0
    
    END Node
  }


 3 msec 50% cpu,        72 rnd        34 seq   45.2055% same seg    30.137% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
