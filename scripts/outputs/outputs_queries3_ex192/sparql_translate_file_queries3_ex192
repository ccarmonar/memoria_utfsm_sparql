 DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS ((SELECT TOP 1  DB.DBA.SPARQL_CONSTRUCT (
      vector (
        vector (
         1,
         1,
         3,
         __i2id ( UNAME'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' ),
         3,
         __i2id ( UNAME'http://learningsparql.com/ns/addressbook#Aunt' )),
        vector (
         1,
         0,
         3,
         __i2id ( UNAME'http://learningsparql.com/ns/addressbook#hasAunt' ),
         1,
         1)),
      vector (
       "s_21_13_t2"."S",
       "s_21_13_t4"."S"),
      vector (),
     1) AS "callret-0"
FROM DB.DBA.RDF_QUAD AS "s_21_13_t2"
  INNER JOIN DB.DBA.RDF_QUAD AS "s_21_13_t3"
  ON (
    "s_21_13_t2"."O" = "s_21_13_t3"."S")
  INNER JOIN DB.DBA.RDF_QUAD AS "s_21_13_t4"
  ON (
    "s_21_13_t3"."O" = "s_21_13_t4"."O")
  INNER JOIN DB.DBA.RDF_QUAD AS "s_21_13_t5"
  ON (
    "s_21_13_t4"."S" = "s_21_13_t5"."S")
WHERE
  "s_21_13_t2"."P" = __i2idn ( __bft( 'http://learningsparql.com/ns/addressbook#hasParent' , 1))
  AND 
  "s_21_13_t3"."P" = __i2idn ( __bft( 'http://learningsparql.com/ns/addressbook#hasParent' , 1))
  AND 
  "s_21_13_t4"."P" = __i2idn ( __bft( 'http://learningsparql.com/ns/addressbook#hasParent' , 1))
  AND 
  "s_21_13_t5"."P" = __i2idn ( __bft( 'http://learningsparql.com/ns/addressbook#gender' , 1))
  AND 
  "s_21_13_t5"."O" = __i2idn ( __bft( 'http://learningsparql.com/ns/data#female' , 1))
  AND 
 ( "s_21_13_t2"."O" <>  "s_21_13_t4"."S")
OPTION (QUIETCAST)))
