1406725992	
1406725978	
1432022727	
1406726042	
1304381161	
1433482997	
1432021430	
1406725839	
1432077189	
1397988631	
1434341807	
1394971116	
1406715059	
1432027603	
1408154294	
1406715056	
1215703664	
1339156904	
1345041556	
1406725937	

  { 
    time     0.015% fanout         1 input         1 rows
      clear: (<V set_ctr$38 in>)
    s# 44 39 cluster outer seq start, set no <V set_ctr$38 in>    
    save ctx:()
    time     1e+02% fanout      1000 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   4.5e+06 Fanout:     1e+03
      clear: (<V s_37_2_t0.O$28 an>)
      clear on continue: (<V s_37_2_t0.O$28 an>)
    s# 53 27 from DB.DBA.RDF_QUAD by RDF_QUAD    4.5e+06 rows   
    Key RDF_QUAD  ASC  (<V s_37_2_t0.O$28 an>)
     inlined  P =  IRI_ID"...version" 
    
    time     0.072% fanout         1 input      1000 rows
      clear: (<V var1$30 a>)$28 () 
    s# 63 42 skip node  1000  <none> <r set_ctr$38 via  Set53>
    After code:
      0: <V var1$30 a> := Call __ro2sq (<r s_37_2_t0.O$28 via  Set63>)
      5: BReturn 0
    time    0.0048% fanout         0 input      1000 rows
    $38 (42 27 39 ) $30 (42 ) 
    s# 71 32 Select (<V var1$30 a>)
      set no: <r set_ctr$38 via  Set63 Set53>
  }
Warning: You might have a Cartesian product.



 22 msec 94% cpu,         1 rnd       998 seq         0% same seg         0% same pg 
89 disk reads, 0 read ahead,    92.941% wait
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
