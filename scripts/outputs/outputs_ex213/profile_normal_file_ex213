http://learningsparql.com/ns/data#course59	http://learningsparql.com/ns/addressbook#courseTitle	Using SPARQL with non-RDF Data	
http://learningsparql.com/ns/data#i8301	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i9771	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	
http://learningsparql.com/ns/data#i0432	http://learningsparql.com/ns/addressbook#takingCourse	http://learningsparql.com/ns/data#course59	

  { 
    Precode:
      0:   { 
          time      0.04% fanout         1 input         1 rows
            clear: (<V ext_sets$64 i>, <V set_ctr$44 in>)
          s# 65 45 cluster outer seq start, set no <V set_ctr$44 in>    
          save ctx:()
          time       0.1% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ()
            5: <V vector$29 x> := Call vector ( IRI_ID"...course59" )
            10: <V vector$31 x> := Call vector (<c uid>,  0 )
            15: BReturn 0
            clear: (<V vector$31 x>, <V vector$29 x>, <V vector$27 x>)
          s# 97 46 Fork 46 {  
                clear: (<V __stub$34 in>, <V set_no$35 i>, <V user_aggr_ret$49 x>)$27 (33 ) 
              s# 76 33 Subquery 33 
                multistate set no = <V set_no$35 i>
                { 
                  time     0.043% fanout         1 input         1 rows
                  Precode:
                    0: <V __stub$34 in> :=  := artm  1 
                    4: BReturn 0
                    clear: (<V __stub$34 in>)
                  s# 81 42 END Node
                  time     0.016% fanout         0 input         1 rows
                  $34 (42 ) 
                  s# 76 36 Subquery Select(<r __stub$34 via  Set81>)
                    set no: <r set_no$35 via  Set81>
                }
              
              After code:
                0: if (user_aggr_notfirst$47  =  1 ) then 15 else 4 unkn 4
                4: user_aggr_notfirst$47  :=  := artm  1 
                8: <V user_aggr_ret$49 x> := Call DB.DBA.SPARQL_DESC_AGG_INIT (user_aggr_env$48 )
                15: <V user_aggr_ret$49 x> := Call DB.DBA.SPARQL_DESC_AGG_ACC (user_aggr_env$48 , <r vector$27 via  Set76>)
                22: BReturn 0
          }
          time     1e+02% fanout         1 input         1 rows
            clear: (<V callret-0$52 x>, <V DB.DBA.SPARQL_DESC_AGG_FIN$50 x>)$31 (46 ) $29 (46 ) 
          s# 104 62 skip node  1  <none> <V set_ctr$44 in>
          After code:
            0: <V DB.DBA.SPARQL_DESC_AGG_FIN$50 x> := Call DB.DBA.SPARQL_DESC_AGG_FIN (user_aggr_env$48 )
            7: <V callret-0$52 x> := Call DB.DBA.SPARQL_DESC_DICT (<V DB.DBA.SPARQL_DESC_AGG_FIN$50 x>, <r vector$29 via  Set104>,  0 , <DB_NULL>, <DB_NULL>, <r vector$31 via  Set104>)
            14: BReturn 0
          time     0.012% fanout         0 input         1 rows
          $64 (62 46 45 ) $44 (62 46 45 ) $52 (62 ) 
          s# 112 54 Subquery Select(<V callret-0$52 x>)
            set no: <r set_ctr$44 via  Set104>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$120 )
      15: BReturn 0
    
    END Node
  }


 7 msec 87% cpu,         7 rnd         4 seq         0% same seg         0% same pg 
10 disk reads, 0 read ahead,    1.7162% wait
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
