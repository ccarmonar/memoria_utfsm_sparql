http://learningsparql.com/ns/terms#t3	http://www.w3.org/2000/01/rdf-schema#type	http://www.w3.org/2004/02/skos/core#Concept	
http://learningsparql.com/ns/terms#t1	http://www.w3.org/2004/02/skos/core#prefLabel	truck	
http://learningsparql.com/ns/terms#t2	http://www.w3.org/2000/01/rdf-schema#type	http://www.w3.org/2004/02/skos/core#Concept	
http://learningsparql.com/ns/terms#t2	http://www.w3.org/2004/02/skos/core#prefLabel	flat	
http://learningsparql.com/ns/terms#t3	http://www.w3.org/2004/02/skos/core#prefLabel	elevator	
http://learningsparql.com/ns/terms#t1	http://www.w3.org/2000/01/rdf-schema#type	http://www.w3.org/2004/02/skos/core#Concept	
http://learningsparql.com/ns/terms#t1	http://www.w3.org/2004/02/skos/core#prefLabel	lorry	
http://learningsparql.com/ns/terms#t2	http://www.w3.org/2004/02/skos/core#prefLabel	apartment	
http://learningsparql.com/ns/terms#t3	http://www.w3.org/2004/02/skos/core#prefLabel	lift	

  { 
    Precode:
      0:   { 
          time    0.0038% fanout         1 input         1 rows
            clear: (<V ext_sets$90 i>, <V set_ctr$72 in>)
          s# 91 73 cluster outer seq start, set no <V set_ctr$72 in>    
          save ctx:()
          time     0.017% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...type" ,  3 ,  IRI_ID"...Concept" )
            5: <V vector$29 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...prefLabel" ,  1 ,  2 )
            10: <V vector$31 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...prefLabel" ,  1 ,  1 )
            15: <V vector$33 x> := Call vector (<V vector$27 x>, <V vector$29 x>, <V vector$31 x>)
            20: <V vector$35 x> := Call vector ()
            25: BReturn 0
            clear: (<V vector$35 x>, <V vector$33 x>, <V vector$31 x>, <V vector$29 x>, <V vector$27 x>)$31 (74 ) $27 (74 ) $29 (74 ) 
          s# 177 74 Fork 74 {  
              time     0.062% fanout         6 input         1 rows
                clear: (<V t13.O$38 an>, <V t13.S$39 rn>)
                clear on continue: (<V t13.O$38 an>, <V t13.S$39 rn>)
              s# 102 37 from DB.DBA.RDF_QUAD by RDF_QUAD          6 rows   
              Key RDF_QUAD  ASC  (<V t13.S$39 rn>, <V t13.O$38 an>)
               inlined  P =  IRI_ID"...row" 
              
              time     0.032% fanout       0.5 input         6 rows
                clear: (<V t14.S$42 rn>)
                clear on continue: (<V t14.S$42 rn>)
              s# 113 41 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
              Key RDF_QUAD  ASC  (<V t14.S$42 rn>)
               inlined  P =  IRI_ID"...column"  ,  S = <V t13.S$39 rn> ,  O =  2 
              
              time      0.11% fanout         2 input         3 rows
              Precode:
                0: <V __rdf_strsqlval$44 s> := Call __rdf_strsqlval (<r t13.O$38 via  Set113>,  0 )
                5: <V rdf_concat_impl$46 s> := Call rdf_concat_impl (<c http://learningsparql.com/ns/terms#t>, <V __rdf_strsqlval$44 s>)
                10: <V __i2idn$48 r> := Call __i2idn (<V rdf_concat_impl$46 s>)
                15: BReturn 0
                clear: (<V t10.S$51 rn>, <V __i2idn$48 r>, <V rdf_concat_impl$46 s>, <V __rdf_strsqlval$44 s>)
                clear on continue: (<V t10.S$51 rn>)$127 (50 ) $38 (41 ) $44 (50 ) $46 (50 ) 
              s# 123 50 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          4 rows   
              Key RDF_QUAD_POGS  ASC  (<V t10.S$51 rn>)
               P =  IRI_ID"...row"  ,  O = <v k_t13.O$127 Set129 an>
              vector param casts: <r t13.O$38 via  Set113>-> <v k_t13.O$127 Set129 an>
              
              time     0.019% fanout       0.5 input         6 rows
                clear: (<V t11.S$54 rn>)
                clear on continue: (<V t11.S$54 rn>)
              s# 137 53 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
              Key RDF_QUAD  ASC  (<V t11.S$54 rn>)
               inlined  P =  IRI_ID"...column"  ,  S = <V t10.S$51 rn> ,  O =  1 
              
              time     0.037% fanout         1 input         3 rows
                clear: (<V t15.O$57 an>)
                clear on continue: (<V t15.O$57 an>)$39 (53 50 41 ) $151 (56 ) 
              s# 147 56 from DB.DBA.RDF_QUAD by RDF_QUAD        7.5 rows   
              Key RDF_QUAD  ASC  (<V t15.O$57 an>)
               inlined  P =  IRI_ID"...label"  ,  S = <v k_t13.S$151 Set153 rn>
              vector param casts: <r t13.S$39 via  Set137 Set123 Set129 Set113>-> <v k_t13.S$151 Set153 rn>
              
              time     1e+02% fanout         0 input         3 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       7.5 Fanout:         0
              Precode:
                0: <V __ro2sq$59 a> := Call __ro2sq (<V t15.O$57 an>)
                5: <V DB.DBA.rdf_strlang_impl$61 x> := Call DB.DBA.rdf_strlang_impl (<V __ro2sq$59 a>, <c en-GB>)
                12: BReturn 0
                clear: (<V t12.O$64 an>, <V DB.DBA.rdf_strlang_impl$61 x>, <V __ro2sq$59 a>, <V user_aggr_ret$77 x>, <V vector$70 x>, <V DB.DBA.rdf_strlang_impl$68 x>, <V __ro2sq$66 a>)
                clear on continue: (<V __ro2sq$66 a>, <V DB.DBA.rdf_strlang_impl$68 x>, <V vector$70 x>, <V user_aggr_ret$77 x>, <V t12.O$64 an>)$165 (63 ) $48 (56 53 50 ) $51 (56 53 ) $57 () $59 (63 ) $61 (63 ) 
              s# 161 63 from DB.DBA.RDF_QUAD by RDF_QUAD        7.5 rows   
              Key RDF_QUAD  ASC  (<V t12.O$64 an>)
               inlined  P =  IRI_ID"...label"  ,  S = <v k_t10.S$165 Set167 rn>
              vector param casts: <r t10.S$51 via  Set147 Set153 Set137>-> <v k_t10.S$165 Set167 rn>
              
              After code:
                0: <V __ro2sq$66 a> := Call __ro2sq (<V t12.O$64 an>)
                5: <V DB.DBA.rdf_strlang_impl$68 x> := Call DB.DBA.rdf_strlang_impl (<V __ro2sq$66 a>, <c en-US>)
                12: <V vector$70 x> := Call vector (<r __i2idn$48 via  Set161 Set167 Set147 Set153 Set137 Set123 Set129>, <r DB.DBA.rdf_strlang_impl$61 via  Set161 Set167>, <V DB.DBA.rdf_strlang_impl$68 x>)
                17: if (user_aggr_notfirst$75  =  1 ) then 32 else 21 unkn 21
                21: user_aggr_notfirst$75  :=  := artm  1 
                25: <V user_aggr_ret$77 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$76 )
                32: <V user_aggr_ret$77 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$76 , <r vector$33 via  Set161 Set167 Set147 Set153 Set137 Set123 Set129 Set113 Set102>, <V vector$70 x>, <r vector$35 via  Set161 Set167 Set147 Set153 Set137 Set123 Set129 Set113 Set102>,  1 )
                39: BReturn 0
          }
          time     0.013% fanout         1 input         1 rows
            clear: (<V callret-0$78 x>)
          s# 184 88 skip node  1  <none> <V set_ctr$72 in>
          After code:
            0: <V callret-0$78 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$76 )
            7: BReturn 0
          time    0.0018% fanout         0 input         1 rows
          $72 (88 74 73 ) $78 (88 ) $90 (88 74 73 ) 
          s# 192 80 Subquery Select(<V callret-0$78 x>)
            set no: <r set_ctr$72 via  Set184>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$200 )
      15: BReturn 0
    
    END Node
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 56 msec 94% cpu,        32 rnd         8 seq   48.4848% same seg   12.1212% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
