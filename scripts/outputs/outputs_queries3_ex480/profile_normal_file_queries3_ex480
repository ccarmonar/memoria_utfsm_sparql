http://learningsparql.com/ns/demo#i594	http://purl.org/dc/terms/dateCopyrighted	2013	
http://learningsparql.com/ns/demo#i591	http://purl.org/dc/terms/dateCopyrighted	2013	
http://learningsparql.com/ns/demo#i592	http://purl.org/dc/terms/dateCopyrighted	2013	

  { 
    Precode:
      0:   { 
          time       1.1% fanout         1 input         1 rows
            clear: (<V ext_sets$60 i>, <V set_ctr$42 in>)
          s# 61 43 cluster outer seq start, set no <V set_ctr$42 in>    
          save ctx:()
          time        14% fanout         1 input         1 rows
          Precode:
            0: <V __rdflit$27 x> := Call __rdflit (rdflit1204)
            5: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$29 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c 2013>)
            12: <V vector$31 x> := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...dateCopyrighted" ,  3 , <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$29 a>)
            17: <V vector$33 x> := Call vector (<V vector$31 x>)
            22: <V vector$35 x> := Call vector ()
            27: BReturn 0
            clear: (<V vector$35 x>, <V vector$33 x>, <V vector$31 x>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$29 a>, <V __rdflit$27 x>)$31 (44 ) $29 (44 ) 
          s# 84 44 Fork 44 {  
              time        81% fanout         0 input         1 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         3 Fanout:         0
                clear: (<V s_8_5_t1.S$38 rn>, <V user_aggr_ret$47 x>, <V vector$40 x>)
                clear on continue: (<V s_8_5_t1.S$38 rn>, <V user_aggr_ret$47 x>, <V vector$40 x>)$33 (37 ) $35 (37 ) 
              s# 72 37 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          3 rows   
              Key RDF_QUAD_POGS  ASC  (<V s_8_5_t1.S$38 rn>)
               P =  IRI_ID"...dateCopyrighted"  ,  O = rdflit1204
              
              After code:
                0: <V vector$40 x> := Call vector (<V s_8_5_t1.S$38 rn>)
                5: if (user_aggr_notfirst$45  =  1 ) then 20 else 9 unkn 9
                9: user_aggr_notfirst$45  :=  := artm  1 
                13: <V user_aggr_ret$47 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$46 )
                20: <V user_aggr_ret$47 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$46 , <r vector$33 via  Set72>, <V vector$40 x>, <r vector$35 via  Set72>,  1 )
                27: BReturn 0
          }
          time       3.6% fanout         1 input         1 rows
            clear: (<V callret-0$48 x>)
          s# 91 58 skip node  1  <none> <V set_ctr$42 in>
          After code:
            0: <V callret-0$48 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$46 )
            7: BReturn 0
          time      0.57% fanout         0 input         1 rows
          $42 (58 44 43 ) $48 (58 ) $60 (58 44 43 ) 
          s# 99 50 Subquery Select(<V callret-0$48 x>)
            set no: <r set_ctr$42 via  Set91>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$107 )
      15: BReturn 0
    
    END Node
  }


 1 msec 21% cpu,         1 rnd         2 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
