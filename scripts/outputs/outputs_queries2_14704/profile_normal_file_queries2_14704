
  { 
    time       2.2% fanout         1 input         1 rows
      clear: (<V set_ctr$143 in>)
    s# 146 144 cluster outer seq start, set no <V set_ctr$143 in>    
    save ctx:()
      clear: (<V var2$29 in>, <V var1$28 a>, <V set_no$30 i>, <V var2$135 a>, <V var1$133 a>)
    s# 155 27 Subquery 27 
      multistate set no = <V set_no$30 i>
      { 
        time      0.51% fanout         1 input         1 rows
          clear: (<V set_no$34 i>)
        s# 159 88 cluster outer seq start, set no <V set_no$34 i>    
        save ctx:()
        time       1.4% fanout         1 input         1 rows
        
        s# 347 111 Fork 111 {  
                
            save ctx:()
              set no = <V set_no$30 i> array  <none>  save: 
            time       1.1% fanout         1 input         1 rows
            
            s# 322 91 Fork 91 {  
                    
                save ctx:()
                  set no = <V set_no$30 i> array  <none>  save: 
                time        34% fanout         4 input         1 rows
                  clear: (<V s_37_12_t3.S$36 rn>)
                  clear on continue: (<V s_37_12_t3.S$36 rn>)
                s# 170 35 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          4 rows   
                Key RDF_QUAD_POGS  ASC  (<V s_37_12_t3.S$36 rn>)
                 P =  IRI_ID"...direct/P703"  ,  O =  IRI_ID"...Q5" 
                
                time        58% fanout         0 input         4 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:      0.31 Fanout:         0
                  clear: (<V s_37_12_t2.S$39 rn>)
                  clear on continue: (<V s_37_12_t2.S$39 rn>)
                s# 180 38 from DB.DBA.RDF_QUAD by RDF_QUAD       0.31 rows   
                Key RDF_QUAD  ASC  (<V s_37_12_t2.S$39 rn>)
                 inlined  P =  IRI_ID"...direct/P279"  ,  S = <V s_37_12_t3.S$36 rn> ,  O =  IRI_ID"...Q7187" 
                
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       8.5 Fanout:         0
                  clear: (<V s_37_12_t4.S$42 rn>, <V s_37_12_t4.P$43 rn>)
                  clear on continue: (<V s_37_12_t4.P$43 rn>, <V s_37_12_t4.S$42 rn>)$194 (41 ) 
                s# 190 41 from DB.DBA.RDF_QUAD by RDF_QUAD_SP        8.5 rows   
                Key RDF_QUAD_SP  ASC  (<V s_37_12_t4.P$43 rn>, <V s_37_12_t4.S$42 rn>)
                 inlined  S = <V s_37_12_t2.S$39 rn>
                row specs:  S = <v k_s_37_12_t3.S$194 Set196 rn>
                vector param casts: <r s_37_12_t3.S$36 via  Set180>-> <v k_s_37_12_t3.S$194 Set196 rn>
                
                time         0% fanout         0 input         0 rows
                  clear: (<V _cvt$46 s>, <V __bft$48 x>, <V __id2in$50 a>)
                s# 210 205 END Node
                After test:
                  0: <V __id2in$50 a> := Call __id2in (<V s_37_12_t4.P$43 rn>)
                  5: <V __bft$48 x> := Call __bft (<V __id2in$50 a>,  2 )
                  10: <V _cvt$46 s> := Call _cvt (<tag 193 flag 0>, <V __bft$48 x>)
                  15: if (<V _cvt$46 s>  LIKE  <c %string2%>) then 19 else 24 unkn 24
                  19: if (<V _cvt$46 s>  LIKE  <c %string1%>) then 24 else 23 unkn 24
                  23: BReturn 1
                  24: BReturn 0
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
                  clear: (<V s_37_12_t4.O$53 an>)
                  clear on continue: (<V s_37_12_t4.O$53 an>)$36 (205 41 38 ) $223 (52 ) $227 (52 ) $229 (52 ) 
                s# 219 52 from DB.DBA.RDF_QUAD by RDF_QUAD        1.2 rows   
                Key RDF_QUAD  ASC  (<V s_37_12_t4.O$53 an>)
                 inlined  P = <v k_s_37_12_t4.P$223 Set225 rn> ,  S = <V k_s_37_12_t2.S$227 rn>
                row specs:  S = <V k_s_37_12_t3.S$229 rn>
                vector param casts: <r s_37_12_t4.P$43 via  Set210>-> <v k_s_37_12_t4.P$223 Set225 rn>, <r s_37_12_t2.S$39 via  Set210 Set190 Set196>-> <V k_s_37_12_t2.S$227 rn>, <r s_37_12_t3.S$36 via  Set210 Set190 Set196 Set180>-> <V k_s_37_12_t3.S$229 rn>
                
                time         0% fanout         0 input         0 rows
                
                s# 242 237 END Node
                After test:
                  0: if (  { 
                      time         0% fanout         0 input         0 rows
                        clear: (<V set_ctr$66 in>)
                      s# 246 67 cluster outer seq start, set no <V set_ctr$66 in>    
                      save ctx:()
                      time         0% fanout         0 input         0 rows
                      Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   4.7e-08 Fanout:         0
                      $42 (67 52 205 ) $259 (56 ) $263 (56 ) $265 (56 ) 
                      s# 255 56 from DB.DBA.RDF_QUAD by RDF_QUAD    4.7e-08 rows Parallel, tail cost        10   
                      Key RDF_QUAD  ASC  ()
                       inlined  P = <v k_s_37_12_t4.P$259 Set261 rn> ,  S = <V k_s_37_12_t4.S$263 rn> ,  O = <V k_s_37_12_t4.O$265 an>
                      vector param casts: <r s_37_12_t4.P$43 via  Set246 Set219 Set225 Set210>-> <v k_s_37_12_t4.P$259 Set261 rn>, <r s_37_12_t4.S$42 via  Set246 Set219 Set225 Set210>-> <V k_s_37_12_t4.S$263 rn>, <r s_37_12_t4.O$53 via  Set246>-> <V k_s_37_12_t4.O$265 an>
                      copy on branch $259 $263 $265 $53 $66 $0 $0 $0 sets: 146 159 170 180 196 190 210 225 219 246 
                      
                      time         0% fanout         0 input         0 rows
                      Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
                      $53 (56 67 ) $276 (58 ) 
                      s# 272 58 from DB.DBA.RDF_QUAD by RDF_QUAD    1.4e-07 rows Parallel, tail cost        10   max 1
                      Key RDF_QUAD  ASC  ()
                       inlined  P =  IRI_ID"...wasDerivedFrom"  ,  S = <v k_s_37_12_t4.O$276 Set278 rn>
                      vector param casts: <r s_37_12_t4.O$53 via  Set255 Set261 Set246>-> <v k_s_37_12_t4.O$276 Set278 rn>
                      copy on branch $276 $66 $0 $0 sets: 146 159 170 180 196 190 210 225 219 246 261 255 
                      
                      time         0% fanout         0 input         0 rows
                      $66 (58 56 67 ) 
                      s# 285 60 Subquery Select( <none> )
                        set no: <r set_ctr$66 via  Set272 Set278 Set255 Set261>
                    }
                  ) then 5 else 4 unkn 5
                  4: BReturn 1
                  5: BReturn 0
                time         0% fanout         0 input         0 rows
                  clear: (<V var1$33 rn>, <V var3$32 rn>)$39 (237 52 205 41 ) $43 (237 52 205 ) 
                s# 297 75 Distinct (HASH) set no <r set_no$34 via  Set242 Set219 Set225 Set210 Set190 Set196 Set180 Set170>(<r s_37_12_t2.S$39 via  Set242 Set219 Set225 Set210 Set190 Set196>, <r s_37_12_t4.P$43 via  Set242 Set219 Set225 Set210>)
                After code:
                  0: <V var3$32 rn> :=  := artm <r s_37_12_t2.S$39 via  Set297 Set242 Set219 Set225 Set210 Set190 Set196>
                  4: <V var1$33 rn> :=  := artm <r s_37_12_t4.P$43 via  Set297 Set242 Set219 Set225 Set210>
                  8: BReturn 0
                time         0% fanout         0 input         0 rows
                $32 (75 ) $34 (75 237 52 205 41 38 35 88 ) 
                s# 307 81 Subquery Select(<V var3$32 rn>, <V var1$33 rn>)
                  set no: <r set_no$34 via  Set297 Set242 Set219 Set225 Set210 Set190 Set196 Set180 Set170>
                time         0% fanout         0 input         0 rows
                Precode:
                  0: <V isnotnull$89 in> := Call isnotnull (<V var1$33 rn>)
                  5: BReturn 0
                  clear: (<V isnotnull$89 in>)$89 (92 ) 
                s# 314 92 Sort (HASH) set no <r set_no$30 via  Set307>(<V var1$33 rn>) -> (<V isnotnull$89 in>) up to         8 distinct
                
            }
            time       1.2% fanout         0 input         1 rows
              clear: (<V aggregate$93 in>, <V var1$33 rn>)
              clear on continue: (<V aggregate$93 in>, <V var1$33 rn>)
            s# 329 99 group by read node  
            (<V var1$33 rn>, <V aggregate$93 in>)
            time         0% fanout         0 input         0 rows
            
            s# 339 112 Sort (HASH) set no <r set_no$30 via  Set329 Set159>(<V aggregate$93 in>) -> (<V var1$33 rn>)
            
        }
        time       1.9% fanout         0 input         1 rows
          clear: (<V aggregate$93 in>, <V var1$33 rn>, <V var2$29 in>, <V var1$28 a>, <V __id2in$124 a>)
          clear on continue: (<V aggregate$93 in>, <V var1$33 rn>, <V var2$29 in>, <V var1$28 a>, <V __id2in$124 a>)
        s# 354 117 Key from temp (<V var1$33 rn>, <V aggregate$93 in>)
        
        
        After code:
          0: <V __id2in$124 a> := Call __id2in (<V var1$33 rn>)
          5: <V var1$28 a> :=  := artm <V __id2in$124 a>
          9: <V var2$29 in> :=  := artm <V aggregate$93 in>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 155 126 Subquery Select(<V var1$28 a>, <V var2$29 in>)
          set no: <r set_no$30 via  Set354 Set159>
      }
    
    After code:
      0: <V var1$133 a> := Call __ro2sq (<V var1$28 a>)
      5: <V var2$135 a> := Call __ro2sq (<V var2$29 in>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $133 (27 ) $135 (27 ) $143 (27 144 ) 
    s# 372 137 Select (<V var1$133 a>, <V var2$135 a>)
      set no: <r set_ctr$143 via  Set155>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 0% cpu,         5 rnd         3 seq   16.6667% same seg   33.3333% same pg 
Compilation: 30 msec 0 reads         0% read 0 messages         0% clw
