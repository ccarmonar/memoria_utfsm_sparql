
  { 
    time       6.3% fanout         1 input         1 rows
    time        94% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    Precode:
      0: DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27  := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c string1>)
      7: DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$29  := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c string2>)
      14: BReturn 0
    RDF_QUAD_POGS   1.4e-07 rows(t4.S$33, t4.O$32)
     inlined  P =  IRI_ID"...statement/P486" 
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   5.7e-15 Fanout:         0
    RDF_QUAD   5.7e-15 rows(t3.O$37, t3.S$36)
     inlined  P =  IRI_ID"...P486"  O = k_t4.S$164
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    RDF_QUAD   1.4e-07 rows(t1.O$40)
     inlined  P =  IRI_ID"...P486"  ,  S = t3.S$36
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
    RDF_QUAD   1.4e-07 rows()
     inlined  P =  IRI_ID"...statement/P486"  ,  S = k_t1.O$189
    time         0% fanout         0 input         0 rows
    Precode:
      0: var5$44 := Call __ro2sq (t4.O$32)
      5: var4$46 := Call __id2in (t4.S$33)
      10: var1$48 := Call __id2in (t3.S$36)
      15: __all_eq$50 := Call __all_eq (t3.O$37, t4.S$33)
      20: BReturn 0
    outer {
        time         0% fanout         0 input         0 rows
        Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       8.5 Fanout:         0
        RDF_QUAD_SP       8.5 rows(t6.P$53)
         inlined  S = k_t4.S$211 S = k_t3.O$215
        time         0% fanout         0 input         0 rows
        END Node
        After test:
        0: __id2in$56 := Call __id2in (t6.P$53)
        5: __bft$58 := Call __bft (__id2in$56,  2 )
        10: DB.DBA.RDF_LONG_OF_SQLVAL$60 := Call DB.DBA.RDF_LONG_OF_SQLVAL (__bft$58)
        17: rdf_strstarts_impl$62 := Call rdf_strstarts_impl (DB.DBA.RDF_LONG_OF_SQLVAL$60, DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 )
        22: if ( 0  = rdf_strstarts_impl$62) then 27 else 26 unkn 27
        26: BReturn 1
        27: BReturn 0
        time         0% fanout         0 input         0 rows
        Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
        RDF_QUAD       1.2 rows(t6.O$65)
         inlined  P = k_t6.P$240 ,  S = k_t4.S$244 S = k_t3.O$246
        time         0% fanout         0 input         0 rows
      } /* end of outer */
    set_ctr$71
     out: (rdf_strstarts_impl$62, t6.O$65, DB.DBA.RDF_LONG_OF_SQLVAL$60, __bft$58, t6.P$53, __id2in$56)
     shadow: (rdf_strstarts_impl$258,  <none> , DB.DBA.RDF_LONG_OF_SQLVAL$260, __bft$262, t6.P$264, __id2in$266)
    time         0% fanout         0 input         0 rows
    outer {
        Subquery 80 
          { 
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
            RDF_QUAD   1.4e-07 rows(t8.O$88, t8.S$87)
             inlined  P =  IRI_ID"...wasDerivedFrom"  ,  S = k___all_eq$289
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       8.5 Fanout:         0
            RDF_QUAD_SP       8.5 rows(t9.P$91)
             inlined  S = k_t8.O$304
            time         0% fanout         0 input         0 rows
            END Node
            After test:
            0: __id2in$94 := Call __id2in (t9.P$91)
            5: __bft$96 := Call __bft (__id2in$94,  2 )
            10: DB.DBA.RDF_LONG_OF_SQLVAL$98 := Call DB.DBA.RDF_LONG_OF_SQLVAL (__bft$96)
            17: rdf_strstarts_impl$100 := Call rdf_strstarts_impl (DB.DBA.RDF_LONG_OF_SQLVAL$98, DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$29 )
            22: if ( 0  = rdf_strstarts_impl$100) then 27 else 26 unkn 27
            26: BReturn 1
            27: BReturn 0
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
            RDF_QUAD       1.2 rows(t9.O$103)
             inlined  P = k_t9.P$331 ,  S = k_t8.O$335
            
            After code:
            0: var4$81 :=  := artm t8.S$87
            4: var6$82 :=  := artm t8.O$88
            8: var7$83 :=  := artm t9.P$91
            12: var8$84 :=  := artm t9.O$103
            16: BReturn 0
            time         0% fanout         0 input         0 rows
            Subquery Select(var4$81, var6$82, var7$83, var8$84)
          }
        time         0% fanout         0 input         0 rows
      } /* end of outer */
    set_ctr$114
     out: (var6$82, var4$81, set_no$85, var7$83, var8$84)
     shadow: ( <none> ,  <none> ,  <none> ,  <none> ,  <none> )
    
    After code:
    0: var3$123 := Call __id2in (t6.P$53)
    5: var2$125 := Call __ro2sq (t6.O$65)
    10: var6$127 := Call __id2in (var6$82)
    15: var7$129 := Call __id2in (var7$83)
    20: var8$131 := Call __ro2sq (var8$84)
    25: BReturn 0
    time         0% fanout         0 input         0 rows
    Select (var1$48, var2$125, var3$123, var4$46, var5$44, var6$127, var7$129, var8$131)
  }


 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 9 msec 0 reads         0% read 0 messages         0% clw
