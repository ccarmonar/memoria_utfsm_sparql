
  { 
    time       4.5% fanout         1 input         1 rows
      clear: (<V set_ctr$86 in>)
    s# 92 87 cluster outer seq start, set no <V set_ctr$86 in>    
    save ctx:()
      clear: (<V var1$28 a>, <V set_no$29 i>)
    s# 101 27 Subquery 27 
      multistate set no = <V set_no$29 i>
      { 
        
        s# 105 30 Union
          { 
              clear: (<V var1$32 a>, <V set_no$33 i>, <V var1$28 a>)
            s# 108 31 Subquery 31 
              multistate set no = <V set_no$33 i>
              { 
                time        60% fanout         0 input         1 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.3 Fanout:         0
                  clear: (<V s_37_2_t0-u8.S$35 rn>)
                  clear on continue: (<V s_37_2_t0-u8.S$35 rn>)
                s# 112 34 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        0.3 rows   max 1
                Key RDF_QUAD_POGS  ASC  (<V s_37_2_t0-u8.S$35 rn>)
                 P =  IRI_ID"...direct/P31"  ,  O =  IRI_ID"...Q864380" 
                
                time         0% fanout         0 input         0 rows
                  clear: (<V var1$32 a>)$35 () 
                s# 122 45 skip node  1  <none> <r set_no$33 via  Set112>
                After code:
                  0: <V var1$32 a> :=  := artm <r s_37_2_t0-u8.S$35 via  Set122>
                  4: BReturn 0
                time         0% fanout         0 input         0 rows
                
                s# 108 37 Subquery Select(<V var1$32 a>)
                  set no: <r set_no$33 via  Set122 Set112>
              }
            
            After code:
              0: <V var1$28 a> :=  := artm <V var1$32 a>
              4: BReturn 0
            time         0% fanout         0 input         0 rows
            
            s# 101 47 Subquery Select(<V var1$28 a>)
              set no: <r set_no$29 via  Set108>
          }
          { 
              clear: (<V var1$55 an>, <V set_no$56 i>, <V var1$28 a>)
            s# 146 54 Subquery 54 
              multistate set no = <V set_no$56 i>
              { 
                time        36% fanout         0 input         1 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.3 Fanout:         0
                  clear: (<V s_37_5_t1.O$58 an>)
                  clear on continue: (<V s_37_5_t1.O$58 an>)
                s# 150 57 from DB.DBA.RDF_QUAD by RDF_QUAD        0.3 rows   max 1
                Key RDF_QUAD  ASC  (<V s_37_5_t1.O$58 an>)
                 inlined  P =  IRI_ID"...direct/P373"  ,  S =  IRI_ID"...Q864380" 
                
                time         0% fanout         0 input         0 rows
                  clear: (<V var1$55 an>)$58 () 
                s# 160 68 skip node  1  <none> <r set_no$56 via  Set150>
                After code:
                  0: <V var1$55 an> :=  := artm <r s_37_5_t1.O$58 via  Set160>
                  4: BReturn 0
                time         0% fanout         0 input         0 rows
                
                s# 146 60 Subquery Select(<V var1$55 an>)
                  set no: <r set_no$56 via  Set160 Set150>
              }
            
            After code:
              0: <V var1$28 a> :=  := artm <V var1$55 an>
              4: BReturn 0
            time         0% fanout         0 input         0 rows
            
            Subquery Select(<V var1$28 a>)
              set no: <r set_no$29 via  Set146>
          }
      }
    
    time         0% fanout         0 input         0 rows
      clear: (<V var1$78 a>)$28 (27 ) 
    s# 183 90 skip node  1  <none> <r set_ctr$86 via  Set101>
    After code:
      0: <V var1$78 a> := Call __ro2sq (<r var1$28 via  Set183>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $78 (90 ) $86 (90 27 87 ) 
    s# 191 80 Select (<V var1$78 a>)
      set no: <r set_ctr$86 via  Set183 Set101>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 4% cpu,         2 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
