
  { 
    time       5.5% fanout         1 input         1 rows
      clear: (<V set_ctr$42 in>)
    s# 45 43 cluster outer seq start, set no <V set_ctr$42 in>    
    save ctx:()
    time        95% fanout         0 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       0.3 Fanout:         0
    Precode:
      0: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c wiki>)
      7: BReturn 0
      clear: (<V s_37_2_t0.S$30 rn>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a>)
      clear on continue: (<V s_37_2_t0.S$30 rn>)
    s# 54 29 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        0.3 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_37_2_t0.S$30 rn>)
     P =  IRI_ID"...about"  ,  O =  IRI_ID"...Q12418" 
    
    time         0% fanout         0 input         0 rows
      clear: (<V rdf_contains_impl$32 i>, <V var1$34 a>)$27 (29 ) $30 () 
    s# 69 64 END Node
    After test:
      0: <V rdf_contains_impl$32 i> := Call rdf_contains_impl (<V s_37_2_t0.S$30 rn>, <r DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 via  Set54>)
      5: if ( 0  = <V rdf_contains_impl$32 i>) then 10 else 9 unkn 10
      9: BReturn 1
      10: BReturn 0
    After code:
      0: <V var1$34 a> := Call __id2in (<r s_37_2_t0.S$30 via  Set69>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $34 (64 ) $42 (64 29 43 ) 
    s# 77 36 Select (<V var1$34 a>)
      set no: <r set_ctr$42 via  Set69 Set54>
  }
Warning: You might have a Cartesian product.



 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 29 msec 1 reads   94.8238% read 0 messages         0% clw
