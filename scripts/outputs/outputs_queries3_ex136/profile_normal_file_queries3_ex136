http://www.openlinksw.com/schemas/virtrdf#	
http://www.w3.org/ns/ldp#	
urn:activitystreams-owl:map	
http://localhost:8890/sparql	
http://localhost:8890/DAV/	
http://www.w3.org/2002/07/owl#	
urn:sparql:bind:tests	
http://dbpedia.org/schema/property_rules#	
dbprdf-label	
http://www.wikidata.org/	
http://wikidata.org	
http://www.learningsparql.com/examples/	
http://www.learningsparql.com/second_edition/	

  { 
    time   0.00011% fanout         1 input         1 rows
      clear: (<V set_ctr$49 in>)
    s# 52 50 cluster outer seq start, set no <V set_ctr$49 in>    
    save ctx:()
    time     1e+02% fanout        13 input         1 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         0 Fanout:        13
    Precode:
      0: <V return_iris$32 in> :=  := artm  1 
      4: <V lim$34 x> :=  := artm <DB_NULL>
      8: <V proc_ctr$28 i> :=  := artm  0 
      12:  <none>  := Call __reset_temp ( 139909920158528 )
      17:  <proc table>  := Call DB.DBA.SPARQL_SELECT_KNOWN_GRAPHS ( 1 , <DB_NULL>)
      24: BReturn 0
      clear: (<V g_enum$30 s>, <V proc_ctr$28 i>, <V lim$34 x>, <V return_iris$32 in>, <V g$41 x>)
      clear on continue: (<V g$41 x>, <V proc_ctr$28 i>, <V g_enum$30 s>)
    s# 61 27 Key from temp (<V proc_ctr$28 i>, <V g_enum$30 s>)
    
    
    After code:
      0: <V g$41 x> := Call __box_flags_tweak (<V g_enum$30 s>,  1 )
      5: BReturn 0
    time     6e-05% fanout         0 input        13 rows
    $41 () $49 (27 50 ) 
    s# 70 43 Select (<V g$41 x>)
      set no: <r set_ctr$49 via  Set61>
  }
Warning: You might have a Cartesian product.



 1634 msec 97% cpu,      9980 rnd     53173 seq         0% same seg         0% same pg 
167 disk reads, 0 read ahead,   49.1986% wait
Compilation: 41 msec 0 reads         0% read 0 messages         0% clw
