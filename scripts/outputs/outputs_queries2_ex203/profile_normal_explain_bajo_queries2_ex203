http://learningsparql.com/ns/demo#prob29	http://www.w3.org/2000/01/rdf-schema#label	Location value must be a URI.	
http://learningsparql.com/ns/data#item693	http://learningsparql.com/ns/demo#problem	http://learningsparql.com/ns/demo#prob29	
http://learningsparql.com/ns/data#id1	http://learningsparql.com/ns/demo#problem	http://learningsparql.com/ns/demo#prob29	
http://learningsparql.com/ns/data#id4	http://learningsparql.com/ns/demo#problem	http://learningsparql.com/ns/demo#prob29	

  { 
    Precode:
      0:   { 
          time      0.83% fanout         1 input         1 rows
          time        11% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...problem" ,  3 ,  IRI_ID"...prob29" )
            5: vector$29 := Call vector (vector$27)
            10: DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$31 := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c Location value must be a URI.>)
            17: vector$33 := Call vector ( 3 ,  IRI_ID"...prob29" ,  3 ,  IRI_ID"...label" ,  3 , DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$31)
            22: vector$35 := Call vector (vector$33)
            27: BReturn 0
          fork {
              time        18% fanout        12 input         1 rows
              RDF_QUAD       5.5 rows(s_16_7_t2.O$39, s_16_7_t2.S$38)
               inlined  P =  IRI_ID"...location" 
              time        66% fanout         0 input        12 rows
              END Node
              After test:
              0: is_named_iri_id$41 := Call is_named_iri_id (s_16_7_t2.O$39)
              5: if ( 0  = is_named_iri_id$41) then 9 else 10 unkn 10
              9: BReturn 1
              10: BReturn 0
              
              After code:
              0: vector$43 := Call vector (s_16_7_t2.S$38)
              5: if (user_aggr_notfirst$48  =  1 ) then 20 else 9 unkn 9
              9: user_aggr_notfirst$48  :=  := artm  1 
              13: user_aggr_ret$50 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$49 )
              20: user_aggr_ret$50 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$49 , vector$29, vector$43, vector$35,  1 )
              27: BReturn 0
            }
          time       2.8% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$45
          
          After code:
          0: callret-0$51 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$49 )
          7: BReturn 0
          time      0.34% fanout         0 input         1 rows
          Subquery Select(callret-0$51)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$124 )
      15: BReturn 0
    END Node
  }


 0 msec 26% cpu,         1 rnd        11 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
