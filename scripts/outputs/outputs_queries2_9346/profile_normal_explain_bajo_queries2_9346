
  { 
    time       7.5% fanout         1 input         1 rows
    Subquery 27 
      { 
        time       5.2% fanout         1 input         1 rows
        fork {
            time        82% fanout         0 input         1 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
            RDF_QUAD_POGS   1.4e-07 rows(s_37_10_t4.S$34, s_37_10_t4.O$33)
             inlined  P =  IRI_ID"...geoLongitude" 
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   5.7e-15 Fanout:         0
            RDF_QUAD   5.7e-15 rows(s_37_10_t2.O$38, s_37_10_t2.S$37)
             inlined  P =  IRI_ID"...value/P625"  O = cast$140
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
            Precode:
              0: __ro2sq$40 := Call __ro2sq (s_37_10_t4.O$33)
              5: BReturn 0
            RDF_QUAD_POGS   1.4e-07 rows(s_37_10_t1.S$43)
             P =  IRI_ID"...P625"  ,  O = cast$155
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
            RDF_QUAD   1.4e-07 rows(s_37_10_t3.O$46)
             inlined  P =  IRI_ID"...geoLatitude"  ,  S = k_s_37_10_t2.O$169
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
            RDF_QUAD         1 rows(s_37_10_t0.S$49)
             inlined  P =  IRI_ID"...direct/P2100"  ,  S = k_s_37_10_t1.S$183
            
            After code:
            0: __ro2sq$51 := Call __ro2sq (s_37_10_t3.O$46)
            5: __id2in$53 := Call __id2in (s_37_10_t0.S$49)
            10: BReturn 0
            time         0% fanout         0 input         0 rows
            Sort (__ro2sq$51) -> (__id2in$53, __ro2sq$40)
            
          }
        time       5.3% fanout         0 input         1 rows
        top order by read (__id2in$53, __ro2sq$51, __ro2sq$40)
        
        After code:
        0: var1$28 :=  := artm __id2in$53
        4: var2$29 :=  := artm __ro2sq$51
        8: var3$30 :=  := artm __ro2sq$40
        12: BReturn 0
        time         0% fanout         0 input         0 rows
        Subquery Select(var1$28, var2$29, var3$30)
      }
    
    After code:
    0: var1$96 := Call __ro2sq (var1$28)
    5: var2$98 := Call __ro2sq (var2$29)
    10: var3$100 := Call __ro2sq (var3$30)
    15: BReturn 0
    time         0% fanout         0 input         0 rows
    Select (var1$96, var2$98, var3$100)
  }


 0 msec 1% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 3 msec 0 reads         0% read 0 messages         0% clw
