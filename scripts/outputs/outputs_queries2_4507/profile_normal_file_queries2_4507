
  { 
    time       9.9% fanout         1 input         1 rows
      clear: (<V set_ctr$131 in>)
    s# 134 132 cluster outer seq start, set no <V set_ctr$131 in>    
    save ctx:()
      clear: (<V var2$29 in>, <V var1$28 a>, <V set_no$30 i>, <V var2$123 a>, <V var1$121 a>)
    s# 143 27 Subquery 27 
      multistate set no = <V set_no$30 i>
      { 
        time       4.8% fanout         1 input         1 rows
        
        s# 280 99 Fork 99 {  
                
            save ctx:()
              set no = <V set_no$30 i> array  <none>  save: 
            time       3.7% fanout         1 input         1 rows
            
            s# 255 64 Fork 64 {  
                    
                save ctx:()
                  set no = <V set_no$30 i> array  <none>  save: 
                time        72% fanout         0 input         1 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
                  clear: (<V t5.S$32 rn>, <V t5.O$33 an>)
                  clear on continue: (<V t5.S$32 rn>, <V t5.O$33 an>)
                s# 149 31 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.4e-07 rows Parallel, tail cost       7.9   
                Key RDF_QUAD_POGS  ASC  (<V t5.O$33 an>, <V t5.S$32 rn>)
                 inlined  P =  IRI_ID"...quantityUpperBound" 
                copy on branch $30 $0 $0 $0 sets: 134 
                
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
                  clear: (<V t4.S$36 rn>)
                  clear on continue: (<V t4.S$36 rn>)$32 () $33 () $164 (35 ) 
                s# 160 35 from DB.DBA.RDF_QUAD by RDF_QUAD    1.4e-07 rows Parallel, tail cost       7.9   
                Key RDF_QUAD  ASC  (<V t4.S$36 rn>)
                 inlined  P =  IRI_ID"...quantityLowerBound"  ,  S = <V t5.S$32 rn> ,  O = <v cast$164 Set166 an>
                vector param casts: <V t5.O$33 an>-> <v cast$164 Set166 an>
                copy on branch $32 $164 $30 $0 sets: 134 149 
                
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
                  clear: (<V t3.S$39 rn>)
                  clear on continue: (<V t3.S$39 rn>)$36 () $178 (38 ) 
                s# 174 38 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.4e-07 rows Parallel, tail cost       7.9   
                Key RDF_QUAD_POGS  ASC  (<V t3.S$39 rn>)
                 P =  IRI_ID"...value/P1352"  ,  O = <v cast$178 Set180 an>
                vector param casts: <V t4.S$36 rn>-> <v cast$178 Set180 an>
                copy on branch $178 $30 $0 $0 sets: 134 149 166 160 
                
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       2.8 Fanout:         0
                  clear: (<V t2.P$42 rn>)
                  clear on continue: (<V t2.P$42 rn>)$192 (41 ) 
                s# 188 41 from DB.DBA.RDF_QUAD by RDF_QUAD_OP        2.8 rows Parallel, tail cost   3.1e+02   
                Key RDF_QUAD_OP  ASC  (<V t2.P$42 rn>)
                 inlined  O = <v cast$192 Set194 an>
                vector param casts: <V t3.S$39 rn>-> <v cast$192 Set194 an>
                copy on branch $192 $39 $30 $0 sets: 134 149 166 160 180 174 
                
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:         0
                  clear: (<V t2.S$46 rn>)
                  clear on continue: (<V t2.S$46 rn>)$39 (41 ) $42 () $206 (45 ) 
                s# 202 45 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        1.2 rows Parallel, tail cost   1.1e+02   
                Key RDF_QUAD_POGS  ASC  (<V t2.S$46 rn>)
                 P = <V t2.P$42 rn> ,  O = <v k_t3.S$206 Set208 an>
                vector param casts: <r t3.S$39 via  Set188 Set194>-> <v k_t3.S$206 Set208 an>
                copy on branch $42 $206 $30 $0 sets: 134 149 166 160 180 174 194 188 
                
                time         0% fanout         0 input         0 rows
                  clear: (<V set_ctr$53 i>)
                s# 216 57 cluster outer seq start, set no <V set_ctr$53 i>    
                save ctx:()
                time         0% fanout         0 input         0 rows
                Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.1 Fanout:         0
                  clear: (<V t7.O$50 a>)
                  clear on continue: (<V t7.O$50 a>)$229 (49 ) $46 (57 ) 
                s# 225 49 from DB.DBA.RDF_QUAD by RDF_QUAD        1.1 rows   
                Key RDF_QUAD  ASC  (<V t7.O$50 a>)
                 inlined  P =  IRI_ID"...direct/P31"  ,  S = <v k_t2.S$229 Set231 rn>
                vector param casts: <r t2.S$46 via  Set216>-> <v k_t2.S$229 Set231 rn>
                
                time         0% fanout         0 input         0 rows
                $53 (49 57 ) 
                s# 239 52 end of outer seq <r set_ctr$53 via  Set225 Set231>
                 out: (<V t7.O$50 a>)
                 shadow: ( <none> )
                time         0% fanout         0 input         0 rows
                Precode:
                  0: <V isnotnull$62 in> := Call isnotnull (<V t7.O$50 a>)
                  5: BReturn 0
                  clear: (<V isnotnull$62 in>)$62 (65 ) 
                s# 247 65 Sort (HASH) set no <r set_no$30 via  Set239 Set202 Set208 Set188 Set194 Set174 Set180 Set160 Set166 Set149>(<V t7.O$50 a>) -> (<V isnotnull$62 in>) up to   1.4e+05 distinct
                
            }
            time       3.9% fanout         0 input         1 rows
              clear: (<V aggregate$66 in>, <V t7.O$50 a>)
              clear on continue: (<V aggregate$66 in>, <V t7.O$50 a>)
            s# 262 72 group by read node  
            (<V t7.O$50 a>, <V aggregate$66 in>)
            time         0% fanout         0 input         0 rows
            
            s# 272 100 Sort (HASH) set no <r set_no$30 via  Set262>(<V aggregate$66 in>) -> (<V t7.O$50 a>)
            
        }
        time         6% fanout         0 input         1 rows
          clear: (<V aggregate$66 in>, <V t7.O$50 a>, <V var2$29 in>, <V var1$28 a>, <V __ro2sq$112 a>)
          clear on continue: (<V aggregate$66 in>, <V t7.O$50 a>, <V var2$29 in>, <V var1$28 a>, <V __ro2sq$112 a>)
        s# 287 105 Key from temp (<V t7.O$50 a>, <V aggregate$66 in>)
        
        
        After code:
          0: <V __ro2sq$112 a> := Call __ro2sq (<V t7.O$50 a>)
          5: <V var1$28 a> :=  := artm <V __ro2sq$112 a>
          9: <V var2$29 in> :=  := artm <V aggregate$66 in>
          13: BReturn 0
        time         0% fanout         0 input         0 rows
        
        s# 143 114 Subquery Select(<V var1$28 a>, <V var2$29 in>)
          set no: <r set_no$30 via  Set287>
      }
    
    After code:
      0: <V var1$121 a> := Call __ro2sq (<V var1$28 a>)
      5: <V var2$123 a> := Call __ro2sq (<V var2$29 in>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $131 (27 132 ) $121 (27 ) $123 (27 ) 
    s# 305 125 Select (<V var1$121 a>, <V var2$123 a>)
      set no: <r set_ctr$131 via  Set143>
  }
Warning: You might have a Cartesian product.



 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 203 msec 0 reads         0% read 0 messages         0% clw
