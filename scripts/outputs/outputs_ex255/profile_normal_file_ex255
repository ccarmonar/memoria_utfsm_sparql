http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-dt-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-longnvarchar-lang-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-lang	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-fixedlang-x-any	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-longvarbinary	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-dt-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-lang-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-longnvarchar-fixedlang-x-any-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-fixedlang-x-any	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-uri	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-integer	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-lang-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-fixedlang-x-any-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#default-iid	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-longvarbinary-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-uri	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-literal	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-nvarchar-fixedlang-x-any-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	
http://www.openlinksw.com/virtrdf-data-formats#sql-varchar-uri-nullable	http://www.w3.org/1999/02/22-rdf-syntax-ns#type	http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat	

  { 
    Precode:
      0:   { 
          time       1.1% fanout         1 input         1 rows
            clear: (<V ext_sets$84 i>, <V set_ctr$66 in>)
          s# 85 67 cluster outer seq start, set no <V set_ctr$66 in>    
          save ctx:()
          time       3.5% fanout         1 input         1 rows
          Precode:
            0: <V vector$27 x> := Call vector ( 1 ,  0 ,  1 ,  1 ,  1 ,  2 )
            5: <V vector$29 x> := Call vector (<V vector$27 x>)
            10: <V vector$31 x> := Call vector ()
            15: BReturn 0
            clear: (<V vector$31 x>, <V vector$29 x>, <V vector$27 x>)$27 (68 ) 
          s# 131 68 Fork 68 {  
                clear: (<V ctor-1$34 x>, <V set_no$35 i>, <V user_aggr_ret$71 x>)$31 (33 ) $29 (33 ) 
              s# 96 33 Subquery 33 
                multistate set no = <V set_no$35 i>
                { 
                  time        41% fanout      1000 input         1 rows
                  Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   3.4e+06 Fanout:     1e+03
                    clear: (<V t3.O$37 an>, <V t3.P$38 rn>, <V t3.S$39 rn>)
                    clear on continue: (<V t3.O$37 an>, <V t3.P$38 rn>, <V t3.S$39 rn>)
                  s# 100 36 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    3.4e+06 rows   
                  Key RDF_QUAD_POGS  ASC  (<V t3.S$39 rn>, <V t3.P$38 rn>, <V t3.O$37 an>)
                  
                  
                  time        50% fanout      0.05 input      1000 rows
                    clear: (<V ctor-1$34 x>, <V vector$54 x>, <V __i2idn$52 r>, <V rdf_encode_for_uri_impl$50 s>, <V __rdf_strsqlval$48 s>, <V callretSearchedCASE$42 a>, <V __ro2lo$46 a>, <V is_named_iri_id$44 i>)$37 () $38 () $39 () 
                  s# 112 64 skip node  50  <none> <r set_no$35 via  Set100>
                  After code:
                    0: <V is_named_iri_id$44 i> := Call is_named_iri_id (<r t3.O$37 via  Set112>)
                    5: if ( 0  = <V is_named_iri_id$44 i>) then 19 else 9 unkn 19
                    9: <V __ro2lo$46 a> := Call __ro2lo (<r t3.O$37 via  Set112>)
                    14: <V callretSearchedCASE$42 a> :=  := artm <V __ro2lo$46 a>
                    18: Jump 38 (level=0)
                    19: <V __rdf_strsqlval$48 s> := Call __rdf_strsqlval (<r t3.O$37 via  Set112>,  0 )
                    24: <V rdf_encode_for_uri_impl$50 s> := Call rdf_encode_for_uri_impl (<V __rdf_strsqlval$48 s>)
                    29: <V __i2idn$52 r> := Call __i2idn (<V rdf_encode_for_uri_impl$50 s>)
                    34: <V callretSearchedCASE$42 a> :=  := artm <V __i2idn$52 r>
                    38: <V vector$54 x> := Call vector (<r t3.S$39 via  Set112>, <r t3.P$38 via  Set112>, <V callretSearchedCASE$42 a>)
                    43: <V ctor-1$34 x> :=  := artm <V vector$54 x>
                    47: BReturn 0
                  time       0.5% fanout         0 input        50 rows
                  
                  s# 96 56 Subquery Select(<V ctor-1$34 x>)
                    set no: <r set_no$35 via  Set112 Set100>
                }
              
              After code:
                0: if (user_aggr_notfirst$69  =  1 ) then 15 else 4 unkn 4
                4: user_aggr_notfirst$69  :=  := artm  1 
                8: <V user_aggr_ret$71 x> := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$70 )
                15: <V user_aggr_ret$71 x> := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$70 , <r vector$29 via  Set96>, <V ctor-1$34 x>, <r vector$31 via  Set96>,  1 )
                22: BReturn 0
          }
          time       3.4% fanout         1 input         1 rows
            clear: (<V callret-0$72 x>)
          s# 138 82 skip node  1  <none> <V set_ctr$66 in>
          After code:
            0: <V callret-0$72 x> := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$70 )
            7: BReturn 0
          time      0.31% fanout         0 input         1 rows
          $66 (82 68 67 ) $72 (82 ) $84 (82 68 67 ) 
          s# 146 74 Subquery Select(<V callret-0$72 x>)
            set no: <r set_ctr$66 via  Set138>
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$154 )
      15: BReturn 0
    
    END Node
  }


 2 msec 49% cpu,         1 rnd       998 seq         0% same seg         0% same pg 
Compilation: 2 msec 0 reads         0% read 0 messages         0% clw
