
  { 
    time       3.2% fanout         1 input         1 rows
      clear: (<V set_ctr$41 in>)
    s# 44 42 cluster outer seq start, set no <V set_ctr$41 in>    
    save ctx:()
    time        47% fanout         2 input         1 rows
      clear: (<V s_37_4_t0.S$28 rn>)
      clear on continue: (<V s_37_4_t0.S$28 rn>)
    s# 53 27 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS          2 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_37_4_t0.S$28 rn>)
     P =  IRI_ID"...direct/P31"  ,  O =  IRI_ID"...Q43164" 
    
    time        50% fanout         0 input         2 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
      clear: (<V s_37_4_t1.O$31 an>, <V var1$33 a>)
      clear on continue: (<V s_37_4_t1.O$31 an>, <V var1$33 a>)$28 () 
    s# 63 30 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V s_37_4_t1.O$31 an>)
     inlined  P =  IRI_ID"...direct/P18"  ,  S = <V s_37_4_t0.S$28 rn>
    
    After code:
      0: <V var1$33 a> := Call __ro2sq (<V s_37_4_t1.O$31 an>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $33 () $41 (30 27 42 ) 
    s# 73 35 Select (<V var1$33 a>)
      set no: <r set_ctr$41 via  Set63 Set53>
  }
Warning: You might have a Cartesian product.



 1 msec 7% cpu,         3 rnd         1 seq        25% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
