
  { 
    time       7.1% fanout         1 input         1 rows
      clear: (<V set_ctr$93 in>)
    s# 96 94 cluster outer seq start, set no <V set_ctr$93 in>    
    save ctx:()
    time        17% fanout         1 input         1 rows
      clear: (<V __xsd_type$28 x>)
    s# 105 27 END Node
    After test:
      0: <V __xsd_type$28 x> := Call __xsd_type ( 1 )
      5: if (<V __xsd_type$28 x> = <tag 182 flag 1 c http://www.w3.org/2001/XMLSchema#integer>) then 9 else 10 unkn 10
      9: BReturn 1
      10: BReturn 0
    Precode:
      0: <V __xsd_type$30 x> := Call __xsd_type ( 1 )
      5: BReturn 0
      clear: (<V var2$34 in>, <V var1$33 rn>, <V set_no$35 i>, <V __xsd_type$30 x>, <V var1$85 a>)
    s# 113 32 Subquery 32 
      multistate set no = <V set_no$35 i>
      { 
        time       5.3% fanout         1 input         1 rows
        
        s# 185 48 Fork 48 {  
                
            save ctx:()
              set no = <V set_no$35 i> array  <none>  save: 
            time       1.9% fanout         1 input         1 rows
            
            s# 118 36 END Node
            After test:
              0: if (<V __xsd_type$30 x> = <tag 182 flag 1 c http://www.w3.org/2001/XMLSchema#integer>) then 4 else 5 unkn 5
              4: BReturn 1
              5: BReturn 0
            time        66% fanout         0 input         1 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   6.3e-08 Fanout:         0
              clear: (<V s_37_6_t2.S$38 rn>)
              clear on continue: (<V s_37_6_t2.S$38 rn>)
            s# 126 37 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    6.3e-08 rows Parallel, tail cost       7.9   
            Key RDF_QUAD_POGS  ASC  (<V s_37_6_t2.S$38 rn>)
             inlined  P =  IRI_ID"...P106" 
            copy on branch $30 $35 $0 $0 sets: 96 105 118 
            
            time         0% fanout         0 input         0 rows
            
            s# 141 136 END Node
            After test:
              0: if (<r __xsd_type$30 via  Set126 Set118> = <tag 182 flag 1 c http://www.w3.org/2001/XMLSchema#integer>) then 4 else 5 unkn 5
              4: BReturn 1
              5: BReturn 0
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.7e-14 Fanout:         0
              clear: (<V s_37_6_t0.S$41 rn>, <V s_37_6_t0.O$42 an>)
              clear on continue: (<V s_37_6_t0.O$42 an>, <V s_37_6_t0.S$41 rn>)$38 (136 ) $153 (40 ) 
            s# 149 40 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.7e-14 rows Parallel, tail cost       7.9   
            Key RDF_QUAD_POGS  ASC  (<V s_37_6_t0.O$42 an>, <V s_37_6_t0.S$41 rn>)
             inlined  P =  IRI_ID"...P106" 
            row specs:  S = <v k_s_37_6_t2.S$153 Set155 rn>
            vector param casts: <r s_37_6_t2.S$38 via  Set141>-> <v k_s_37_6_t2.S$153 Set155 rn>
            copy on branch $153 $35 $0 $0 sets: 96 105 118 126 141 
            
            time         0% fanout         0 input         0 rows
            Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   1.4e-07 Fanout:         0
              clear: (<V isnotnull$46 in>)
              clear on continue: (<V isnotnull$46 in>)$42 () $168 (44 ) 
            s# 164 44 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS    1.4e-07 rows Parallel, tail cost        15   
            Key RDF_QUAD_POGS  ASC  ()
             inlined  P =  IRI_ID"...statement/P106"  ,  O =  IRI_ID"...Q42973"  ,  S = <v k_s_37_6_t0.O$168 Set170 rn>
            vector param casts: <V s_37_6_t0.O$42 an>-> <v k_s_37_6_t0.O$168 Set170 rn>
            copy on branch $168 $41 $35 $0 sets: 96 105 118 126 141 155 149 
            
            After code:
              0: <V isnotnull$46 in> := Call isnotnull (<r s_37_6_t0.S$41 via  Set164 Set170>)
              5: BReturn 0
            time         0% fanout         0 input         0 rows
            $46 () 
            s# 177 49 Sort (HASH) set no <r set_no$35 via  Set164 Set170 Set149 Set155 Set141 Set126 Set118>(<r s_37_6_t0.S$41 via  Set164 Set170>) -> (<V isnotnull$46 in>) up to   8.1e+06 distinct
            
        }
        time       3.2% fanout         0 input         1 rows
          clear: (<V aggregate$50 in>, <V s_37_6_t0.S$41 rn>)
          clear on continue: (<V aggregate$50 in>, <V s_37_6_t0.S$41 rn>)
        s# 192 56 group by read node  
        (<V s_37_6_t0.S$41 rn>, <V aggregate$50 in>)
        time         0% fanout         0 input         0 rows
          clear: (<V var2$34 in>, <V var1$33 rn>)$41 () $50 () 
        s# 202 77 END Node
        After test:
          0: if (<V aggregate$50 in> =  1 ) then 4 else 5 unkn 5
          4: BReturn 1
          5: BReturn 0
        After code:
          0: <V var1$33 rn> :=  := artm <r s_37_6_t0.S$41 via  Set202>
          4: <V var2$34 in> :=  := artm <r aggregate$50 via  Set202>
          8: BReturn 0
        time         0% fanout         0 input         0 rows
        $34 (77 ) 
        s# 113 78 Subquery Select(<V var1$33 rn>, <V var2$34 in>)
          set no: <r set_no$35 via  Set202 Set192>
      }
    
    After code:
      0: <V var1$85 a> := Call __id2in (<V var1$33 rn>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $93 (32 27 94 ) $85 (32 ) 
    s# 219 87 Select (<V var1$85 a>)
      set no: <r set_ctr$93 via  Set113 Set105>
  }
Warning: You might have a Cartesian product.



 0 msec 0% cpu,         1 rnd         0 seq         0% same seg         0% same pg 
Compilation: 232 msec 0 reads         0% read 0 messages         0% clw
