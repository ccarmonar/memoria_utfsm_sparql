
  { 
    time      0.34% fanout         1 input         1 rows
      clear: (<V set_ctr$52 in>)
    s# 58 53 cluster outer seq start, set no <V set_ctr$52 in>    
    save ctx:()
    time        22% fanout        81 input         1 rows
    Precode:
      0: <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a> := Call DB.DBA.RDF_MAKE_LONG_OF_SQLVAL (<c string1>)
      7: BReturn 0
      clear: (<V s_37_4_t0.S$30 rn>, <V s_37_4_t0.O$31 an>, <V DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 a>)
      clear on continue: (<V s_37_4_t0.O$31 an>, <V s_37_4_t0.S$30 rn>)
    s# 67 29 from DB.DBA.RDF_QUAD by RDF_QUAD         80 rows   
    Key RDF_QUAD  ASC  (<V s_37_4_t0.O$31 an>, <V s_37_4_t0.S$30 rn>)
     inlined  P =  IRI_ID"...direct/P1628" 
    
    time        77% fanout         0 input        81 rows
      clear: (<V rdf_contains_impl$37 i>, <V DB.DBA.RDF_LONG_OF_SQLVAL$35 a>, <V __rdf_strsqlval$33 s>)$27 (29 ) 
    s# 83 78 END Node
    After test:
      0: <V __rdf_strsqlval$33 s> := Call __rdf_strsqlval (<V s_37_4_t0.O$31 an>,  0 )
      5: <V DB.DBA.RDF_LONG_OF_SQLVAL$35 a> := Call DB.DBA.RDF_LONG_OF_SQLVAL (<V __rdf_strsqlval$33 s>)
      12: <V rdf_contains_impl$37 i> := Call rdf_contains_impl (<V DB.DBA.RDF_LONG_OF_SQLVAL$35 a>, <r DB.DBA.RDF_MAKE_LONG_OF_SQLVAL$27 via  Set67>)
      17: if ( 0  = <V rdf_contains_impl$37 i>) then 22 else 21 unkn 22
      21: BReturn 1
      22: BReturn 0
    time         0% fanout         0 input         0 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:         1 Fanout:         0
      clear: (<V s_37_4_t1.O$40 an>)
      clear on continue: (<V s_37_4_t1.O$40 an>)$95 (39 ) $30 (78 ) 
    s# 91 39 from DB.DBA.RDF_QUAD by RDF_QUAD          1 rows   
    Key RDF_QUAD  ASC  (<V s_37_4_t1.O$40 an>)
     inlined  P =  IRI_ID"...directClaim"  ,  S = <v k_s_37_4_t0.S$95 Set97 rn>
    vector param casts: <r s_37_4_t0.S$30 via  Set83>-> <v k_s_37_4_t0.S$95 Set97 rn>
    
    time         0% fanout         0 input         0 rows
      clear: (<V var1$44 a>, <V var2$42 a>)$31 (39 78 ) $40 () 
    s# 105 56 skip node  10  <none> <r set_ctr$52 via  Set91 Set97 Set83 Set67>
    After code:
      0: <V var2$42 a> := Call __ro2sq (<r s_37_4_t0.O$31 via  Set105 Set91 Set97 Set83>)
      5: <V var1$44 a> := Call __ro2sq (<r s_37_4_t1.O$40 via  Set105>)
      10: BReturn 0
    time         0% fanout         0 input         0 rows
    $42 (56 ) $44 (56 ) $52 (56 39 78 29 53 ) 
    s# 113 46 Select (<V var1$44 a>, <V var2$42 a>)
      set no: <r set_ctr$52 via  Set105 Set91 Set97 Set83 Set67>
  }
Warning: You might have a Cartesian product.

Warning: You might have a Cartesian product.



 1 msec 35% cpu,         2 rnd        80 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
