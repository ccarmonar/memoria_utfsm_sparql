
  { 
    time    0.0019% fanout         1 input         1 rows
      clear: (<V set_ctr$49 in>)
    s# 52 50 cluster outer seq start, set no <V set_ctr$49 in>    
    save ctx:()
    time     0.025% fanout         8 input         1 rows
      clear: (<V s_37_2_t0.P$28 rn>)
      clear on continue: (<V s_37_2_t0.P$28 rn>)
    s# 61 27 from DB.DBA.RDF_QUAD by RDF_QUAD_OP          8 rows   
    Key RDF_QUAD_OP  ASC  (<V s_37_2_t0.P$28 rn>)
     inlined  O =  IRI_ID"...Q486972" 
    
    time      0.78% fanout   7967.25 input         8 rows
    Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.2 Fanout:     8e+03
      clear: (<V s_37_2_t0.S$32 rn>)
      clear on continue: (<V s_37_2_t0.S$32 rn>)
    s# 71 31 from DB.DBA.RDF_QUAD by RDF_QUAD_POGS        1.2 rows   
    Key RDF_QUAD_POGS  ASC  (<V s_37_2_t0.S$32 rn>)
     P = <V s_37_2_t0.P$28 rn> ,  O =  IRI_ID"...Q486972" 
    
    time        99% fanout         0 input     63738 rows
      clear: (<V rdf_regex_impl$39 i>, <V __bft$37 x>, <V __id2in$35 a>, <V var1$41 a>)$32 () $28 (31 ) 
    s# 86 81 END Node
    After test:
      0: <V __id2in$35 a> := Call __id2in (<V s_37_2_t0.S$32 rn>)
      5: <V __bft$37 x> := Call __bft (<V __id2in$35 a>,  2 )
      10: <V rdf_regex_impl$39 i> := Call rdf_regex_impl (<V __bft$37 x>, <c balashov>, <c i>)
      15: if ( 0  = <V rdf_regex_impl$39 i>) then 20 else 19 unkn 20
      19: BReturn 1
      20: BReturn 0
    After code:
      0: <V var1$41 a> := Call __id2in (<r s_37_2_t0.P$28 via  Set86 Set71>)
      5: BReturn 0
    time         0% fanout         0 input         0 rows
    $41 (81 ) $49 (81 31 27 50 ) 
    s# 94 43 Select (<V var1$41 a>, <DB_NULL>)
      set no: <r set_ctr$49 via  Set86 Set71 Set61>
  }
Warning: You might have a Cartesian product.



 177 msec 99% cpu,     18408 rnd     63670 seq         0% same seg   83.6928% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
