http://learningsparql.com/ns/data#jane	http://learningsparql.com/ns/addressbook#hasGrandfather	http://learningsparql.com/ns/data#pat	
http://learningsparql.com/ns/data#mike	http://learningsparql.com/ns/addressbook#hasGrandfather	http://learningsparql.com/ns/data#pat	

  { 
    Precode:
      0:   { 
          time       1.4% fanout         1 input         1 rows
          time         4% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  3 ,  IRI_ID"...hasGrandfather" ,  1 ,  1 )
            5: vector$29 := Call vector (vector$27)
            10: vector$31 := Call vector ()
            15: BReturn 0
          fork {
              time        28% fanout         1 input         1 rows
              RDF_QUAD_POGS         1 rows(s_13_9_t3.S$34)
               P =  IRI_ID"...gender"  ,  O =  IRI_ID"...male" 
              time        10% fanout         2 input         1 rows
              RDF_QUAD_POGS       1.3 rows(s_13_9_t2.S$38, s_13_9_t2.O$37)
               P =  IRI_ID"...hasParent"  ,  O = cast$91
              time        52% fanout         0 input         2 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:       1.3 Fanout:         0
              Precode:
                0: __ro2lo$40 := Call __ro2lo (s_13_9_t2.O$37)
                5: BReturn 0
              RDF_QUAD_POGS       1.3 rows(s_13_9_t1.S$43)
               P =  IRI_ID"...hasParent"  ,  O = cast$106
              
              After code:
              0: vector$45 := Call vector (s_13_9_t1.S$43, __ro2lo$40)
              5: if (user_aggr_notfirst$50  =  1 ) then 20 else 9 unkn 9
              9: user_aggr_notfirst$50  :=  := artm  1 
              13: user_aggr_ret$52 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$51 )
              20: user_aggr_ret$52 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$51 , vector$29, vector$45, vector$31,  1 )
              27: BReturn 0
            }
          time       3.7% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$47
          
          After code:
          0: callret-0$53 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$51 )
          7: BReturn 0
          time      0.68% fanout         0 input         1 rows
          Subquery Select(callret-0$53)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$141 )
      15: BReturn 0
    END Node
  }


 0 msec 17% cpu,         4 rnd         1 seq        20% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
