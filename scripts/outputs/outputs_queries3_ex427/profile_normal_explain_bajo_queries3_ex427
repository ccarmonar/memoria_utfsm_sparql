http://learningsparql.com/ns/addressbook#i9771	http://learningsparql.com/ns/addressbook#doctor	http://learningsparql.com/ns/addressbook#i8301	

  { 
    Precode:
      0:   { 
          time       1.3% fanout         1 input         1 rows
          time       4.1% fanout         1 input         1 rows
          Precode:
            0: vector$27 := Call vector ( 1 ,  0 ,  1 ,  1 ,  1 ,  2 )
            5: vector$29 := Call vector (vector$27)
            10: vector$31 := Call vector ()
            15: BReturn 0
          fork {
              time        30% fanout         1 input         1 rows
              RDF_QUAD_POGS         1 rows(s_11_7_t1.O$35, s_11_7_t1.S$34)
               inlined  P =  IRI_ID"...inverseOf" 
              time        59% fanout         0 input         1 rows
              Warning: the cardinality estimate of the cost model differs greatly from the measured time. Cardinality estimate:   9.1e+06 Fanout:         0
              RDF_QUAD_POGS   9.1e+06 rows(s_11_7_t2.O$39, s_11_7_t2.S$38)
               inlined  P = k_s_11_7_t1.O$90
              
              After code:
              0: __ro2lo$41 := Call __ro2lo (s_11_7_t2.O$39)
              5: vector$43 := Call vector (__ro2lo$41, s_11_7_t1.S$34, s_11_7_t2.S$38)
              10: if (user_aggr_notfirst$48  =  1 ) then 25 else 14 unkn 14
              14: user_aggr_notfirst$48  :=  := artm  1 
              18: user_aggr_ret$50 := Call DB.DBA.SPARQL_CONSTRUCT_INIT (user_aggr_env$49 )
              25: user_aggr_ret$50 := Call DB.DBA.SPARQL_CONSTRUCT_ACC (user_aggr_env$49 , vector$29, vector$43, vector$31,  1 )
              32: BReturn 0
            }
          time       4.9% fanout         1 input         1 rows
          skip node  1  <none> set_ctr$45
          
          After code:
          0: callret-0$51 := Call DB.DBA.SPARQL_CONSTRUCT_FIN (user_aggr_env$49 )
          7: BReturn 0
          time      0.59% fanout         0 input         1 rows
          Subquery Select(callret-0$51)
        }
      
      8:  <none>  := Call DB.DBA.RDF_DICT_OF_TRIPLES_TO_THREE_COLS (scalar$126 )
      15: BReturn 0
    END Node
  }


 0 msec 19% cpu,         2 rnd         0 seq         0% same seg         0% same pg 
Compilation: 1 msec 0 reads         0% read 0 messages         0% clw
