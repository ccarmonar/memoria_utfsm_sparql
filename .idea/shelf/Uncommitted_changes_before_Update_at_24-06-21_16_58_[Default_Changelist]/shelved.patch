Index: scripts/test/test_json.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import unittest\nfrom functions_test import compare_json\nfrom parameterized import parameterized\n\n\nclass TestJson(unittest.TestCase):\n    @parameterized.expand([\n        [\"test_wikidata1\", compare_json(\"test_wikidata1\")],\n        [\"test_wikidata2\", compare_json(\"test_wikidata2\")],\n        [\"test_wikidata3\", compare_json(\"test_wikidata3\")],\n        [\"test_wikidata4\", compare_json(\"test_wikidata4\")],\n        [\"test_wikidata5\", compare_json(\"test_wikidata5\")],\n        [\"test_wikidata6\", compare_json(\"test_wikidata6\")],\n        [\"test_wikidata7\", compare_json(\"test_wikidata7\")],\n        [\"test_wikidata8\", compare_json(\"test_wikidata8\")],\n        [\"test_wikidata9\", compare_json(\"test_wikidata9\")],\n        [\"test_wikidata10\", compare_json(\"test_wikidata10\")],\n        [\"test_wikidata11\", compare_json(\"test_wikidata11\")],\n        [\"test_wikidata12\", compare_json(\"test_wikidata12\")],\n        [\"test_wikidata13\", compare_json(\"test_wikidata13\")],\n        [\"test_wikidata14\", compare_json(\"test_wikidata14\")],\n        [\"test_wikidata15\", compare_json(\"test_wikidata15\")],\n        [\"test_wikidata16\", compare_json(\"test_wikidata16\")],\n        [\"test_wikidata17\", compare_json(\"test_wikidata17\")],\n        [\"test_wikidata18\", compare_json(\"test_wikidata18\")],\n        [\"test_wikidata19\", compare_json(\"test_wikidata19\")],\n        [\"test_wikidata20\", compare_json(\"test_wikidata20\")],\n        [\"test_wikidata21\", compare_json(\"test_wikidata21\")],\n        [\"test_wikidata22\", compare_json(\"test_wikidata22\")],\n        [\"test_wikidata23\", compare_json(\"test_wikidata23\")],\n        [\"test_wikidata24\", compare_json(\"test_wikidata24\")],\n        [\"test_wikidata25\", compare_json(\"test_wikidata25\")],\n        [\"test_wikidata26\", compare_json(\"test_wikidata26\")],\n        [\"test_wikidata27\", compare_json(\"test_wikidata27\")],\n\n    ])\n    def test_compare_json(self, name, a):\n        self.assertTrue(a)\n\n\nif __name__ == '__main__':\n    unittest.main()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/test/test_json.py b/scripts/test/test_json.py
--- a/scripts/test/test_json.py	(revision 1779c5bc5f2d15e18705d59bf5fed7e0bffba463)
+++ b/scripts/test/test_json.py	(date 1624046622286)
@@ -5,15 +5,15 @@
 
 class TestJson(unittest.TestCase):
     @parameterized.expand([
-        ["test_wikidata1", compare_json("test_wikidata1")],
-        ["test_wikidata2", compare_json("test_wikidata2")],
-        ["test_wikidata3", compare_json("test_wikidata3")],
-        ["test_wikidata4", compare_json("test_wikidata4")],
-        ["test_wikidata5", compare_json("test_wikidata5")],
-        ["test_wikidata6", compare_json("test_wikidata6")],
-        ["test_wikidata7", compare_json("test_wikidata7")],
-        ["test_wikidata8", compare_json("test_wikidata8")],
-        ["test_wikidata9", compare_json("test_wikidata9")],
+        #["test_wikidata1", compare_json("test_wikidata1")],
+        #["test_wikidata2", compare_json("test_wikidata2")],
+        #["test_wikidata3", compare_json("test_wikidata3")],
+        #["test_wikidata4", compare_json("test_wikidata4")],
+        #["test_wikidata5", compare_json("test_wikidata5")],
+        #["test_wikidata6", compare_json("test_wikidata6")],
+        #["test_wikidata7", compare_json("test_wikidata7")],
+        #["test_wikidata8", compare_json("test_wikidata8")],
+        #["test_wikidata9", compare_json("test_wikidata9")],
         ["test_wikidata10", compare_json("test_wikidata10")],
         ["test_wikidata11", compare_json("test_wikidata11")],
         ["test_wikidata12", compare_json("test_wikidata12")],
Index: scripts/test/functions_test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json, os.path\n#from pathlib import Path\n\n\ndef compare_json(filename):\n    returns_path = '/home/c161905/Memoria/memoria_utfsm_sparql/scripts/feature_extraction_script/returns/'\n    correct_results = '/home/c161905/Memoria/memoria_utfsm_sparql/scripts/test/correct_results/'\n    filename_complete = filename+\".json\"\n    if os.path.isfile(returns_path+filename_complete) and os.path.isfile(correct_results+filename_complete):\n        with open(returns_path+filename_complete) as jsonFile_ts:\n            jsonObject_test = json.load(jsonFile_ts)\n            jsonFile_ts.close()\n\n        with open(correct_results+filename_complete) as jsonFile_tr:\n            jsonObject_target = json.load(jsonFile_tr)\n            jsonFile_tr.close()\n\n        if jsonObject_test.keys() == jsonObject_target.keys():\n            for k in jsonObject_test.keys():\n                for subk in jsonObject_test[k].keys():\n                    if all(element != subk for element in [\"time\",\"fanout\", \"input_rows\", \"cardinality_estimate\", \"cardinality_fanout\", \"profile_text\", \"profile_text_low_explain\", \"precode_text\", \"after_code_text\"]):\n                        if jsonObject_test[k][subk] == jsonObject_target[k][subk]:\n                            continue\n                        else:\n                            print(\"ERROR: \"+filename)\n                            print(\"TEST: \"+filename+\"[\"+k+\"]\"+\"[\"+subk+\"] = \"+str(jsonObject_test[k][subk]))\n                            print(\"TARGET: \" + filename + \"[\" + k + \"]\" + \"[\" + subk + \"] = \" + str(jsonObject_target[k][subk]))\n                            return False\n            return True\n\n        else:\n            print(\"ERROR: nÂ° operations not equal\")\n            return False\n    else:\n        print(\"Some file not exist in returns or correct_results. Filename: \"+filename)\n        return False\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/test/functions_test.py b/scripts/test/functions_test.py
--- a/scripts/test/functions_test.py	(revision 1779c5bc5f2d15e18705d59bf5fed7e0bffba463)
+++ b/scripts/test/functions_test.py	(date 1624046703375)
@@ -3,8 +3,8 @@
 
 
 def compare_json(filename):
-    returns_path = '/home/c161905/Memoria/memoria_utfsm_sparql/scripts/feature_extraction_script/returns/'
-    correct_results = '/home/c161905/Memoria/memoria_utfsm_sparql/scripts/test/correct_results/'
+    returns_path = '/home/ccarmona/Memoria/memoria_utfsm_sparql/scripts/feature_extraction_script/returns/'
+    correct_results = '/home/ccarmona/Memoria/memoria_utfsm_sparql/scripts/test/correct_results/'
     filename_complete = filename+".json"
     if os.path.isfile(returns_path+filename_complete) and os.path.isfile(correct_results+filename_complete):
         with open(returns_path+filename_complete) as jsonFile_ts:
@@ -17,8 +17,10 @@
 
         if jsonObject_test.keys() == jsonObject_target.keys():
             for k in jsonObject_test.keys():
+                #print(jsonObject_target[k].keys())
+                #print(jsonObject_test[k].keys())
                 for subk in jsonObject_test[k].keys():
-                    if all(element != subk for element in ["time","fanout", "input_rows", "cardinality_estimate", "cardinality_fanout", "profile_text", "profile_text_low_explain", "precode_text", "after_code_text"]):
+                    if all(element != subk for element in ["time","fanout", "input_rows", "cardinality_estimate", "cardinality_fanout", "profile_text", "profile_text_low_explain", "precode_text", "after_code_text","O","S"]):
                         if jsonObject_test[k][subk] == jsonObject_target[k][subk]:
                             continue
                         else:
Index: scripts/virtuoso_isql_exec_script.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/bash\nsystem_password=\"161905\";\ncurrent_path=\"/home/c161905/Memoria/memoria_utfsm_sparql\"\npath_virtuoso_isql=$VIRTUOSO7_isql;\npath_virtuoso_db=$VIRTUOSO7_db;\npath_virtuoso_sparql_path=$VIRTUOSO7_test_sparql;\nisql_host=\"1111\";\nisql_username=\"dba\";\nisql_password=\"dba\";\n\nif [ \"$2\" == \"wd\" ]; then\n\n    if [[ ! -f \"sparql_files/wikidata_queries/$1\" ]] ; then\n        echo 'File is not there, aborting.'\n        exit\n    fi\n\n    else\n\n    if [[ ! -f \"sparql_files/$1\" ]] ; then\n        echo 'File is not there, aborting.'\n        exit\n    fi\n\nfi\n\n\nmkdir -p sparql_profiles\nmkdir -p outputs\ncd outputs\nfile_from_arg=$1\nfilename=\"${file_from_arg%.*}\"\nmkdir -p outputs_$filename\ncd ..\n\n\nif [ \"$2\" == \"wd\" ]; then\n    echo \"wikidata_file\"\n    str_prefixes_file=$(<sparql_files/wikidata_queries/wikidata_prefixes)\n    str_sparql=$(<sparql_files/wikidata_queries/$1)\n    str_sparql=$str_prefixes_file$str_sparql\n    cp \"$current_path/scripts/sparql_files/wikidata_queries/$1\" \"outputs/outputs_$filena  me\"\n    cat \"sparql_files/wikidata_queries/wikidata_prefixes\" \"sparql_files/wikidata_queries/$1\" > \"outputs/outputs_$filename/$filename-prex.rq\"\n\n    else\n\n    str_sparql=$(<sparql_files/$1)\n    cp \"$current_path/scripts/sparql_files/$1\" \"outputs/outputs_$filename\"\nfi\n\n\nsparql_translate=\"\nSET BLOBS ON;\nSET SPARQL_TRANSLATE ON;\nSET VERT_ROW_OUTPUT OFF;\nSPARQL $str_sparql;\nSET SPARQL_TRANSLATE OFF;\n\"\n\nprofile_normal=\"\n__dbf_set('enable_qr_comment', 1);\n__dbf_set('dbf_explain_level', 3);\nSET BLOBS ON;\nprofile('SPARQL $str_sparql');\n\"\n\nprofile_normal_explain_bajo=\"\n__dbf_set('enable_qr_comment', 1);\n__dbf_set('dbf_explain_level', 0);\nSET BLOBS ON;\nprofile('SPARQL $str_sparql');\n\"\n\nexplain_parse_tree=\"\n__dbf_set('enable_qr_comment', 1);\n__dbf_set('dbf_explain_level', 3);\ndbg_obj_print('$1');\nselect dbg_obj_print(explain('sparql $str_sparql',-2));\n\"\n\necho \"Executando isql $1\";\necho -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password VERBOSE=OFF BANNER=OFF exec=\"$sparql_translate\" > outputs/outputs_$filename/sparql_translate_file_$filename\necho -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password VERBOSE=OFF BANNER=OFF exec=\"$profile_normal\" > outputs/outputs_$filename/profile_normal_file_$filename\necho -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password VERBOSE=OFF BANNER=OFF exec=\"$profile_normal_explain_bajo\" > outputs/outputs_$filename/profile_normal_explain_bajo_$filename\n\n#echo \"PARSE TREE\";\n#echo -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password exec=\"$explain_parse_tree\"\n\n#echo -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password VERBOSE=OFF BANNER=OFF exec=\"$profile_normal\" > sparql_profiles/profile_normal_file_$filename\n#echo -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password VERBOSE=OFF BANNER=OFF exec=\"$profile_normal_explain_bajo\" > sparql_profiles/profile_normal_explain_bajo_$filename\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/virtuoso_isql_exec_script.sh b/scripts/virtuoso_isql_exec_script.sh
--- a/scripts/virtuoso_isql_exec_script.sh	(revision 1779c5bc5f2d15e18705d59bf5fed7e0bffba463)
+++ b/scripts/virtuoso_isql_exec_script.sh	(date 1623966679539)
@@ -1,6 +1,7 @@
 #!/bin/bash
 system_password="161905";
-current_path="/home/c161905/Memoria/memoria_utfsm_sparql"
+system_username="ccarmona"
+current_path="/home/"$system_username"/Memoria/memoria_utfsm_sparql"
 path_virtuoso_isql=$VIRTUOSO7_isql;
 path_virtuoso_db=$VIRTUOSO7_db;
 path_virtuoso_sparql_path=$VIRTUOSO7_test_sparql;
Index: scripts/virtuoso_load_ttls_from_folders.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/bash\n\nsystem_password=\"161905\";\ncurrent_path=\"/home/c161905/Memoria/memoria_utfsm_sparql\"\npath_virtuoso_isql=$VIRTUOSO7_isql;\npath_virtuoso_db=$VIRTUOSO7_db;\npath_virtuoso_sparql_path=$VIRTUOSO7_test_sparql;\nisql_host=\"1111\";\nisql_username=\"dba\";\nisql_password=\"dba\";\n\n\n\ncd $path_virtuoso_db/learning_sparql_ttl\nfor FILE in *; \ndo \n\nfilename=\"$FILE\"\n\nexec=\"\nDB.DBA.TTLP_MT (file_to_string_output ('learning_sparql_ttl/$filename'), '', 'http://www.learningsparql.com/second_edition/');\n\"\n\necho $exec\n\necho -e $system_password | sudo -S $path_virtuoso_isql $isql_host $isql_username $isql_password exec=\"$exec\"\ndone\n\n\n\n\n#echo \"--------------------------------------\";\n#echo \"Executando isql\";\n#echo \"--------------------------------------\";\n#
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/virtuoso_load_ttls_from_folders.sh b/scripts/virtuoso_load_ttls_from_folders.sh
--- a/scripts/virtuoso_load_ttls_from_folders.sh	(revision 1779c5bc5f2d15e18705d59bf5fed7e0bffba463)
+++ b/scripts/virtuoso_load_ttls_from_folders.sh	(date 1623966683955)
@@ -1,7 +1,8 @@
 #!/bin/bash
 
 system_password="161905";
-current_path="/home/c161905/Memoria/memoria_utfsm_sparql"
+system_username="ccarmona"
+current_path="/home/"$system_username"/Memoria/memoria_utfsm_sparql"
 path_virtuoso_isql=$VIRTUOSO7_isql;
 path_virtuoso_db=$VIRTUOSO7_db;
 path_virtuoso_sparql_path=$VIRTUOSO7_test_sparql;
@@ -32,4 +33,4 @@
 #echo "--------------------------------------";
 #echo "Executando isql";
 #echo "--------------------------------------";
-#
\ No newline at end of file
+#
Index: scripts/feature_extraction_script/pretty.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/feature_extraction_script/pretty.sh b/scripts/feature_extraction_script/pretty.sh
new file mode 100755
--- /dev/null	(date 1624037533206)
+++ b/scripts/feature_extraction_script/pretty.sh	(date 1624037533206)
@@ -0,0 +1,6 @@
+#!/bin/bash
+mkdir -p returns/pretty_json
+for file in returns/$sparql_folder_wikidata*'.json'; do
+    echo "Prettifying: "${file##*/}
+    jq . returns/${file##*/} > returns/pretty_json/pretty_${file##*/}
+done
\ No newline at end of file
